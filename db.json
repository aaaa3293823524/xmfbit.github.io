{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/img/rotation.png","path":"img/rotation.png","modified":0,"renderable":0},{"_id":"source/avatar/liumengli.jpg","path":"avatar/liumengli.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/compileGSLUseVS.md","hash":"4e8d8fa9f9d76739a9bee8c966f63f2003f99151","modified":1485092879000},{"_id":"source/_posts/CS131.md","hash":"cfaed26f9b0df2ca254ee9b9977e16990fb820d4","modified":1485092532000},{"_id":"source/_posts/hello-world.md","hash":"83ed29662f5775bed6a8b1af300aca1b91240d92","modified":1485092768000},{"_id":"source/_posts/use-dosygen.md","hash":"7dfd60c0492ea6a9e4b7d5133617adf423e575b6","modified":1485092804000},{"_id":"source/about/index.md","hash":"7eb7acffb61b7be9cbb41f0b72f409ec4e4be17e","modified":1485092532000},{"_id":"source/tags/index.md","hash":"62ca8832e828cf0af53b2774fe0b4c65af4feed6","modified":1485092532000},{"_id":"source/img/rotation.png","hash":"11557a269f79012091059c15602438a69a211721","modified":1485092532000},{"_id":"source/avatar/liumengli.jpg","hash":"4069caff1851227a11b74759a75bec586c568cd3","modified":1485092532000},{"_id":"themes/next/.gitignore","hash":"5f09fca02e030b7676c1d312cd88ce8fbccf381c","modified":1483604213000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1483604213000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1483604213000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1483604213000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1483604213000},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1483604213000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1483604213000},{"_id":"themes/next/README.en.md","hash":"3b0c7998cf17f9cf9e1a5bfcd65679a43a00c817","modified":1483604213000},{"_id":"themes/next/gulpfile.coffee","hash":"61ef0606a8134894d7ac796bc8d0fa4ba6a94483","modified":1483604213000},{"_id":"themes/next/bower.json","hash":"5abc236d9cc2512f5457ed57c1fba76669eb7399","modified":1483604213000},{"_id":"themes/next/_config.yml","hash":"aaf2d4c31cbf81988dc8ad07f445ff3c8d1fbd68","modified":1485092650000},{"_id":"themes/next/package.json","hash":"877cb98025e59015532c4c9a04a33e2af4ad56f9","modified":1483604213000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1483604213000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1483604213000},{"_id":"themes/next/languages/default.yml","hash":"767470a80dc257e23e14c3a78e8c52a46c9d6209","modified":1483604213000},{"_id":"themes/next/languages/de.yml","hash":"1fdea1f84b7f691f5b4dd4d2b43eeb27b10fa0c8","modified":1483604213000},{"_id":"themes/next/languages/fr-FR.yml","hash":"9fca01ef917d33ae2ae6bc04561ec6799dff5351","modified":1483604213000},{"_id":"themes/next/languages/en.yml","hash":"40057d6608e825d06e0864bac4dcd27ed88ada87","modified":1483604213000},{"_id":"themes/next/languages/id.yml","hash":"34396bef27c4ab9e9a3c5d3e3aa94b0e3b3a7b0d","modified":1483604213000},{"_id":"themes/next/languages/ja.yml","hash":"49f12149edcc1892b26a6207328cda64da20116d","modified":1483604213000},{"_id":"themes/next/languages/pt.yml","hash":"6b660b117314cad93f08757601df3adb04c68beb","modified":1483604213000},{"_id":"themes/next/languages/ko.yml","hash":"b6bc5d6b0c000deb44099b42d3aebb8c49dbfca9","modified":1483604213000},{"_id":"themes/next/languages/pt-BR.yml","hash":"7742ba4c0d682cbe1d38305332ebc928abd754b5","modified":1483604213000},{"_id":"themes/next/languages/ru.yml","hash":"257d11e626cbe4b9b78785a764190b9278f95c28","modified":1483604213000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"f6c9fafa0f5f0050cd07ca2cf5e38fbae3e28145","modified":1483604213000},{"_id":"themes/next/languages/zh-hk.yml","hash":"34c84c6d04447a25bd5eac576922a13947c000e2","modified":1483604213000},{"_id":"themes/next/languages/zh-tw.yml","hash":"c97a5c41149de9b17f33439b0ecf0eff6fdae50e","modified":1483604213000},{"_id":"themes/next/layout/_layout.swig","hash":"2fa3c74066843a859fac77803324a1de51044da9","modified":1483604213000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1483604213000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1483604213000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1483604213000},{"_id":"themes/next/layout/page.swig","hash":"3727fab9dadb967e9c2204edca787dc72264674a","modified":1483604213000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1483604213000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1483604213000},{"_id":"themes/next/layout/schedule.swig","hash":"1f1cdc268f4ef773fd3ae693bbdf7d0b2f45c3a3","modified":1483604213000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1483604213000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1483604213000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1483604213000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1483604213000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1483604213000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1483604213000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1483604213000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"5864f5567ba5efeabcf6ea355013c0b603ee07f2","modified":1483604213000},{"_id":"themes/next/layout/_macro/post.swig","hash":"e6016def9b512188f4c2725399c9adc7bc41cdae","modified":1483604213000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1483604213000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"43d8830bb19da4fc7a5773866be19fa066b62645","modified":1483604213000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1483604213000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1483604213000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1483604213000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1483604213000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"78ccfc1dc915247c1fec3c86d742e0f4c2f6d99c","modified":1483604213000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"4512867d80d9eddfc3a0f5fea3c456f33aa9d522","modified":1483604213000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1483604213000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1483604213000},{"_id":"themes/next/layout/_partials/head.swig","hash":"ca56f92e2fa82b03853869f5073ee1a5626a4796","modified":1483604213000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"39d613e5a9f8389d4ea52d6082502af8e833b9f2","modified":1483604213000},{"_id":"themes/next/layout/_partials/header.swig","hash":"adab5c3f7b173f1b45454787f39dde07aea03483","modified":1483604213000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1483604213000},{"_id":"themes/next/layout/_partials/search.swig","hash":"1431719d1dbba3f5ee385eebc46376d1a960b2d5","modified":1483604213000},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1483604213000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1483604213000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1483604213000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1483604213000},{"_id":"themes/next/scripts/tags/note.js","hash":"6752925eedbdb939d8ec4d11bdfb75199f18dd70","modified":1483604213000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1483604213000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1483604213000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1483604213000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1483604213000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1483604213000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1483604213000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1483604213000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1483604213000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1483604213000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1483604213000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1483604213000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1483604213000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1483604213000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1483604213000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1483604213000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1483604213000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1483604213000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1483604213000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1483604213000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1483604213000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1483604213000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1483604213000},{"_id":"themes/next/layout/_components/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1483604213000},{"_id":"themes/next/layout/_components/algolia-search/dom.swig","hash":"636f1181dd5887a70b4a08ca8f655d4e46635792","modified":1483604213000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1483604213000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1483604213000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"394d9fff7951287cc90f52acc2d4cbfd1bae079d","modified":1483604213000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"4abc01bc870e1d7a783cdbd26166edc782a6a4f4","modified":1483604213000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"b460e27db3dcd4ab40b17d8926a5c4e624f293a9","modified":1483604213000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1483604213000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1483604213000},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1483604213000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1483604213000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1483604213000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1483604213000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1483604213000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1483604213000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1483604213000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1483604213000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1483604213000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1483604213000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1483604213000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1483604213000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1483604213000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1483604213000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1483604213000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c459aa6d607d8bcb747544e74f6ad0b8374aa3b1","modified":1483604213000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"fc185c6cec79593775d1c2440dbe2a71cfbe2e99","modified":1483604213000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1483604213000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1483604213000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1483604213000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1483604213000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1483604213000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1483604213000},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1483604213000},{"_id":"themes/next/source/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1483604213000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1483604213000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1483604213000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1483604213000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1483604213000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1483604213000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1483604213000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1483604213000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1483604213000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"c1072942459fa0880e8a33a1bd929176b62b4171","modified":1483604213000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1483604213000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1483604213000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1483604213000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1483604213000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1483604213000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1483604213000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1483604213000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1483604213000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1483604213000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1483604213000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1483604213000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1483604213000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1483604213000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1483604213000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1483604213000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1483604213000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1483604213000},{"_id":"themes/next/layout/_scripts/third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1483604213000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1483604213000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1483604213000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1483604213000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1483604213000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1483604213000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1483604213000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"fb1d04ede838b52ca7541973f86c3810f1ad396e","modified":1483604213000},{"_id":"themes/next/layout/_scripts/third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1483604213000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1483604213000},{"_id":"themes/next/layout/_scripts/third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1483604213000},{"_id":"themes/next/layout/_scripts/third-party/comments/youyan.swig","hash":"ea8078fa9e10be2bb042749d8b6a97adc38f914c","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1483604213000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1483604213000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1483604213000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1483604213000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1483604213000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1483604213000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1483604213000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1483604213000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1483604213000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1483604213000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1483604213000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1483604213000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1483604213000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1483604213000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1483604213000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1483604213000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1483604213000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1483604213000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1483604213000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"ff9f163bb05c0709577040a875924d36c9ab99d6","modified":1483604213000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"dcf9fe43b2ef78b923118ba39efedb38760e76b1","modified":1483604213000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"1408209dfb9a22a0982a30bdbd14842c2b53f264","modified":1483604213000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1483604213000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9b63bd8effc7cf4b96acdea4d73add7df934a222","modified":1483604213000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1483604213000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"9ccee9189c910b8a264802d7b2ec305d12dedcd0","modified":1483604213000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1483604213000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1483604213000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1483604213000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1483604213000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1483604213000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1483604213000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1483604213000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1483604213000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1483604213000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1483604213000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1483604213000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1483604213000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1483604213000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1483604213000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1483604213000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1483604213000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1483604213000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1483604213000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1483604213000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1483604213000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4b7f81e1006e7acee3d1c840ccba155239f830cc","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"fdfadbb4483043c7e0afd541ee9712389e633517","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"7f1aab694caf603809e33cff82beea84cd0128fd","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"c6dab7661a6b8c678b21b7eb273cef7100f970f6","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"bfd806d0a9f21446a22df82ac02e37d0075cc3b5","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"74d0ba86f698165d13402670382a822c8736a556","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"3eb73cee103b810fa56901577ecb9c9bb1793cff","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"eba491ae624b4c843c8be4c94a044085dad4ba0f","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"637c6b32c58ecf40041be6e911471cd82671919b","modified":1483604213000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"42348219db93a85d2ee23cb06cebd4d8ab121726","modified":1483604213000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1483604213000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1483604213000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1483604213000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1483604213000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1483604213000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1483604213000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1483604213000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1483604213000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1483604213000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1483604213000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1483604213000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1483604213000},{"_id":"public/search.xml","hash":"9e85bba6dc9cddf7d7f2a91b0fc6d76a25581bee","modified":1485092980058},{"_id":"public/tags/index.html","hash":"f5038c07c3b653fcb0ad4f68abeb3e2db8b45c3a","modified":1485092980074},{"_id":"public/archives/2017/index.html","hash":"848e51f92bb3372a96864b9ce152613d318082e1","modified":1485092980074},{"_id":"public/archives/2017/01/index.html","hash":"8757893682ff4ad876ecf0407bc17d776b110a66","modified":1485092980075},{"_id":"public/tags/CS131/index.html","hash":"56076d22b40f5ab377cf913dabb8f0b57b844fb1","modified":1485092980075},{"_id":"public/tags/公开课/index.html","hash":"254e129b5085a9a776938f15346b806f014d0e8c","modified":1485092980075},{"_id":"public/tags/doxygen/index.html","hash":"ac30708d08a565704b7a281250f9db46cb295ba2","modified":1485092980075},{"_id":"public/tags/gsl/index.html","hash":"ed193e987cf9b54942ca934ac7a1031b9d95531a","modified":1485092980075},{"_id":"public/about/index.html","hash":"8cd7c810513f230ee76719611cc3cb17929e233b","modified":1485092980075},{"_id":"public/2017/01/22/CS131/index.html","hash":"9475d16cba5eba9a6bba0ff3018db5ec59abbc56","modified":1485092980075},{"_id":"public/2016/12/16/compileGSLUseVS/index.html","hash":"76b3080d038eb93d49618b65ba56c05ae075da11","modified":1485092980075},{"_id":"public/2016/12/16/hello-world/index.html","hash":"b00eb48e2b4eecb83f0040de548f6a8668ea3c60","modified":1485092980075},{"_id":"public/2016/12/16/use-dosygen/index.html","hash":"f478b3226c409d2ecda520bf4285d7ffdc232fb6","modified":1485092980075},{"_id":"public/archives/index.html","hash":"e5aba09a15bf9fa22aae272e6affe707e6dcbfcc","modified":1485092980075},{"_id":"public/archives/2016/index.html","hash":"70f754f056c501b43aaa0a62553ba9895607d714","modified":1485092980075},{"_id":"public/archives/2016/12/index.html","hash":"91d5c8b5b297507f09b3bc6965ae800856dccc43","modified":1485092980075},{"_id":"public/index.html","hash":"d21ec271838472a14f787c49feb5535eed3c8ec8","modified":1485092980075},{"_id":"public/tags/tool/index.html","hash":"a1a080ce3ff56b32ee8accbf973745a767740e57","modified":1485092980075},{"_id":"public/img/rotation.png","hash":"11557a269f79012091059c15602438a69a211721","modified":1485092980085},{"_id":"public/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1485092980085},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1485092980085},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1485092980085},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1485092980085},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1485092980085},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1485092980085},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1485092980085},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1485092980085},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1485092980085},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1485092980085},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1485092980085},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1485092980085},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1485092980085},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1485092980086},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1485092980086},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1485092980086},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1485092980086},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1485092980086},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1485092980086},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1485092980086},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1485092980086},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1485092980086},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1485092980086},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1485092980086},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1485092980739},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1485092980748},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1485092980752},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1485092980752},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1485092980760},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1485092980760},{"_id":"public/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1485092980761},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1485092980763},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1485092980763},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1485092980763},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1485092980763},{"_id":"public/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1485092980763},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1485092980763},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1485092980763},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1485092980763},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1485092980763},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1485092980763},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1485092980764},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1485092980764},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1485092980764},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1485092980764},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1485092980764},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1485092980764},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1485092980764},{"_id":"public/js/src/schemes/pisces.js","hash":"9ccee9189c910b8a264802d7b2ec305d12dedcd0","modified":1485092980764},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1485092980764},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1485092980764},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1485092980764},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1485092980764},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1485092980764},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1485092980764},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1485092980764},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1485092980764},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1485092980764},{"_id":"public/css/main.css","hash":"8c75dad8805db3b3094e61d9293d87877b992ee9","modified":1485092980764},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1485092980764},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1485092980764},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1485092980764},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1485092980764},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1485092980764},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1485092980764},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1485092980764},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1485092980764},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1485092980764},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1485092980764},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1485092980765},{"_id":"public/avatar/liumengli.jpg","hash":"4069caff1851227a11b74759a75bec586c568cd3","modified":1485092980771},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1485092980775},{"_id":"source/_posts/2014-07-17-pythonregularexpression.md","hash":"ca7829fd89d2f211f876649fa875e43afdd7c1f3","modified":1485095431000}],"Category":[],"Data":[],"Page":[{"title":"关于","date":"2016-12-17T12:49:51.000Z","_content":"\nHi, 你好，欢迎来到我的博客。目前，我是北京理工自动化学院组合导航与智能导航实验室的在读研究生，将于2017年4月进入中国科学院计算技术研究所计算机体系结构国家重点实验室工作。\n\n我的个人兴趣主要包括机器人，计算机视觉，嵌入式平台的深度学习框架及应用。我曾经在北京贝虎机器人和地平线机器人有过短暂的实习经历，亲身参与了基于深度学习的物体检测和车道线识别等任务。\n\n我的博客主要是关于个人在工作学习中的点滴心得，既是自己学习过程的整理，也希望能够帮助到有缘之人。本博客将会不定期更新。我是CV DL领域的新兵，如果我的博客中有问题或遗漏，欢迎与我沟通，帮我指正，请联系邮箱xmfbit # gmail.com.\n","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2016-12-17 20:49:51\n---\n\nHi, 你好，欢迎来到我的博客。目前，我是北京理工自动化学院组合导航与智能导航实验室的在读研究生，将于2017年4月进入中国科学院计算技术研究所计算机体系结构国家重点实验室工作。\n\n我的个人兴趣主要包括机器人，计算机视觉，嵌入式平台的深度学习框架及应用。我曾经在北京贝虎机器人和地平线机器人有过短暂的实习经历，亲身参与了基于深度学习的物体检测和车道线识别等任务。\n\n我的博客主要是关于个人在工作学习中的点滴心得，既是自己学习过程的整理，也希望能够帮助到有缘之人。本博客将会不定期更新。我是CV DL领域的新兵，如果我的博客中有问题或遗漏，欢迎与我沟通，帮我指正，请联系邮箱xmfbit # gmail.com.\n","updated":"2017-01-22T13:42:12.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"ciy8pr52r0001nk1huhdz4bo5","content":"<p>Hi, 你好，欢迎来到我的博客。目前，我是北京理工自动化学院组合导航与智能导航实验室的在读研究生，将于2017年4月进入中国科学院计算技术研究所计算机体系结构国家重点实验室工作。</p>\n<p>我的个人兴趣主要包括机器人，计算机视觉，嵌入式平台的深度学习框架及应用。我曾经在北京贝虎机器人和地平线机器人有过短暂的实习经历，亲身参与了基于深度学习的物体检测和车道线识别等任务。</p>\n<p>我的博客主要是关于个人在工作学习中的点滴心得，既是自己学习过程的整理，也希望能够帮助到有缘之人。本博客将会不定期更新。我是CV DL领域的新兵，如果我的博客中有问题或遗漏，欢迎与我沟通，帮我指正，请联系邮箱xmfbit # gmail.com.</p>\n","excerpt":"","more":"<p>Hi, 你好，欢迎来到我的博客。目前，我是北京理工自动化学院组合导航与智能导航实验室的在读研究生，将于2017年4月进入中国科学院计算技术研究所计算机体系结构国家重点实验室工作。</p>\n<p>我的个人兴趣主要包括机器人，计算机视觉，嵌入式平台的深度学习框架及应用。我曾经在北京贝虎机器人和地平线机器人有过短暂的实习经历，亲身参与了基于深度学习的物体检测和车道线识别等任务。</p>\n<p>我的博客主要是关于个人在工作学习中的点滴心得，既是自己学习过程的整理，也希望能够帮助到有缘之人。本博客将会不定期更新。我是CV DL领域的新兵，如果我的博客中有问题或遗漏，欢迎与我沟通，帮我指正，请联系邮箱xmfbit # gmail.com.</p>\n"},{"title":"标签","date":"2016-12-17T12:10:38.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2016-12-17 20:10:38\ntype: tags\n---\n","updated":"2017-01-22T13:42:12.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ciy8pr52w0003nk1hrwk6trhe","content":"","excerpt":"","more":""}],"Post":[{"title":"使用 Visual Studio 编译 GSL 科学计算库","date":"2016-12-16T11:00:00.000Z","_content":"\nGSL是一个GNU支持的科学计算库，提供了很丰富的数值计算方法。[GSL 的项目主页](http://www.gnu.org/software/gsl/)提供的说明来看，它支持如下的科学计算：\n\n（下面的这张表格的HTML使用的是[No-Cruft Excel to HTML Table Converter](http://pressbin.com/tools/excel_to_html_table/index.html)生成的）\n{% raw %}\n<table>\n   <tr>\n      <td>Complex Numbers </td>\n      <td>Roots of Polynomials</td>\n   </tr>\n   <tr>\n      <td>Special Functions </td>\n      <td>Vectors and Matrices</td>\n   </tr>\n   <tr>\n      <td>Permutations </td>\n      <td>Sorting</td>\n   </tr>\n   <tr>\n      <td>BLAS Support </td>\n      <td>Linear Algebra</td>\n   </tr>\n   <tr>\n      <td>Eigensystems </td>\n      <td>Fast Fourier Transforms</td>\n   </tr>\n   <tr>\n      <td>Quadrature </td>\n      <td>Random Numbers</td>\n   </tr>\n   <tr>\n      <td>Quasi-Random Sequences </td>\n      <td>Random Distributions</td>\n   </tr>\n   <tr>\n      <td>Statistics </td>\n      <td>Histograms</td>\n   </tr>\n   <tr>\n      <td>N-Tuples </td>\n      <td>Monte Carlo Integration</td>\n   </tr>\n   <tr>\n      <td>Simulated Annealing </td>\n      <td>Differential Equations</td>\n   </tr>\n   <tr>\n      <td>Interpolation </td>\n      <td>Numerical Differentiation</td>\n   </tr>\n   <tr>\n      <td>Chebyshev Approximation </td>\n      <td>Series Acceleration</td>\n   </tr>\n   <tr>\n      <td>Discrete Hankel Transforms </td>\n      <td>Root-Finding</td>\n   </tr>\n   <tr>\n      <td>Minimization </td>\n      <td>Least-Squares Fitting</td>\n   </tr>\n   <tr>\n      <td>Physical Constants </td>\n      <td>IEEE Floating-Point</td>\n   </tr>\n   <tr>\n      <td>Discrete Wavelet Transforms </td>\n      <td>Basis splines</td>\n   </tr>\n</table>\n{% endraw %}\n\nGSL的Linux下的配置很简单，照着它的INSTALL文件一步一步来就可以了。CMAKE大法HAO!\n\n``` bash\n./configure\nmake\nmake install\nmake clean\n```\n\n同样的，GSL也可以在Windows环境下配置，下面记录了如何在Windows环境下使用 Visual Studio 和 CMakeGUI 编译测试GSL。\n\n## 使用CMAKE编译成.SLN文件\n\n打开CMAKEGUI，将输入代码路径选为GSL源代码地址，输出路径设为自己想要的输出路径。点击 “Configure“，选择Visual Studio2013为编译器，点击Finish后会进行必要的配置。然后将表格里面的选项都打上勾，再次点击”Configure“，等待完成之后点击”Generate“。完成之后，就可以在输出路径下看到GSL.sln文件了。\n\n## 使用Visual Studio生成解决方案\n\n使用 Visual Studio 打开刚才生成的.SLN文件，分别在Debug和Release模式下生成解决方案，等待完成即可。\n\n当完成后，你应该可以在路径下看到这样一张图，我们主要关注的文件夹是\\bin，\\gsl，\\Debug和\\Release。\n\n\n## 加入环境变量 \n\n修改环境变量的Path，将\\GSL_Build_Path\\bin\\Debug加入，这主要是为了\\Debug文件夹下面的gsl.dll文件。如果不进行这一步的话，一会虽然可以编译，但是却不能运行。\n\n这里顺便注释一句，当使用第三方库的时候，如果需要动态链接库的支持，其中一种方法就是将DLL文件的路径加入到Path中去。\n\n## 建立Visual Studio属性表\n\nVisual Studio可以通过建立工程属性表的方法来配置工程选项，一个OpenCV的例子可以参见Yuanbo She的这篇博文 [Opencv 完美配置攻略 2014 (Win8.1 + Opencv 2.4.8 + VS 2013)](http://my.phirobot.com/blog/2014-02-opencv_configuration_in_vs.html)。\n\n配置文件中主要是包含文件和静态链接库LIB的路径设置。下面把我的贴出来，只需要根据GSL的生成路径做相应修改即可。注意我的属性表中保留了OpenCV的内容，如果不需要的话，尽可以删掉。上面的博文对这张属性表如何配置讲得很清楚，有问题可以去参考。\n\n``` html\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <ImportGroup Label=\"PropertySheets\" />\n  <PropertyGroup Label=\"UserMacros\" />\n  <PropertyGroup>\n        <IncludePath>$(OPENCV249)\\include;E:\\GSLCode\\gsl-build\\;$(IncludePath)</IncludePath>\n        <LibraryPath Condition=\"'$(Platform)'=='Win32'\">$(OPENCV249)\\x86\\vc12\\lib;E:\\GSLCode\\gsl-build\\Debug;$(LibraryPath)</LibraryPath>\n        <LibraryPath Condition=\"'$(Platform)'=='X64'\">$(OPENCV249)\\x64\\vc12\\lib;E:\\GSLCode\\gsl-build\\Debug;$(LibraryPath)</LibraryPath>\n  </PropertyGroup>\n  <ItemDefinitionGroup>\n        <Link Condition=\"'$(Configuration)'=='Debug'\">\n          <AdditionalDependencies>opencv_calib3d249d.lib;opencv_contrib249d.lib;opencv_core249d.lib;opencv_features2d249d.lib;opencv_flann249d.lib;opencv_gpu249d.lib;opencv_highgui249d.lib;opencv_imgproc249d.lib;opencv_legacy249d.lib;opencv_ml249d.lib;opencv_nonfree249d.lib;opencv_objdetect249d.lib;opencv_ocl249d.lib;opencv_photo249d.lib;opencv_stitching249d.lib;opencv_superres249d.lib;opencv_ts249d.lib;opencv_video249d.lib;opencv_videostab249d.lib;gsl.lib;gslcblas.lib;%(AdditionalDependencies)</AdditionalDependencies>\n        </Link>\n        <Link Condition=\"'$(Configuration)'=='Release'\">\n          <AdditionalDependencies>opencv_calib3d249.lib;opencv_contrib249.lib;opencv_core249.lib;opencv_features2d249.lib;opencv_flann249.lib;opencv_gpu249.lib;opencv_highgui249.lib;opencv_imgproc249.lib;opencv_legacy249.lib;opencv_ml249.lib;opencv_nonfree249.lib;opencv_objdetect249.lib;opencv_ocl249.lib;opencv_photo249.lib;opencv_stitching249.lib;opencv_superres249.lib;opencv_ts249.lib;opencv_video249.lib;opencv_videostab249.lib;gsl.lib;gslcblas.lib;%(AdditionalDependencies)</AdditionalDependencies>\n        </Link>\n  </ItemDefinitionGroup>\n  <ItemGroup />\n</Project>\n```\n\n在以后建立Visual Studio工程的时候，在属性窗口直接添加现有属性表就可以了！\n\n## 测试\n\n在项目网站的教程上直接找到一段代码，进行测试，输出贝塞尔函数的值。\n\n\n``` cpp\n#include <stdio.h>\n#include <gsl/gsl_sf_bessel.h>\nint main(void)\n{\n\tdouble x = 5.0;\n\tdouble y = gsl_sf_bessel_J0(x);\n\tprintf(\"J0(%g) = %.18e\\n\", x, y);\n\treturn 0;\n}\n```\n\n控制台输出正确：\n{% raw %}\n<p><img src=\"http://i.imgur.com/uXhVvwS.jpg\" width=\"600\" height=\"200\"></p>\n{% endraw %}\n","source":"_posts/compileGSLUseVS.md","raw":"---\ntitle: 使用 Visual Studio 编译 GSL 科学计算库\ndate: 2016-12-16 19:00:00\ntags: \n    - tool\n    - gsl\n---\n\nGSL是一个GNU支持的科学计算库，提供了很丰富的数值计算方法。[GSL 的项目主页](http://www.gnu.org/software/gsl/)提供的说明来看，它支持如下的科学计算：\n\n（下面的这张表格的HTML使用的是[No-Cruft Excel to HTML Table Converter](http://pressbin.com/tools/excel_to_html_table/index.html)生成的）\n{% raw %}\n<table>\n   <tr>\n      <td>Complex Numbers </td>\n      <td>Roots of Polynomials</td>\n   </tr>\n   <tr>\n      <td>Special Functions </td>\n      <td>Vectors and Matrices</td>\n   </tr>\n   <tr>\n      <td>Permutations </td>\n      <td>Sorting</td>\n   </tr>\n   <tr>\n      <td>BLAS Support </td>\n      <td>Linear Algebra</td>\n   </tr>\n   <tr>\n      <td>Eigensystems </td>\n      <td>Fast Fourier Transforms</td>\n   </tr>\n   <tr>\n      <td>Quadrature </td>\n      <td>Random Numbers</td>\n   </tr>\n   <tr>\n      <td>Quasi-Random Sequences </td>\n      <td>Random Distributions</td>\n   </tr>\n   <tr>\n      <td>Statistics </td>\n      <td>Histograms</td>\n   </tr>\n   <tr>\n      <td>N-Tuples </td>\n      <td>Monte Carlo Integration</td>\n   </tr>\n   <tr>\n      <td>Simulated Annealing </td>\n      <td>Differential Equations</td>\n   </tr>\n   <tr>\n      <td>Interpolation </td>\n      <td>Numerical Differentiation</td>\n   </tr>\n   <tr>\n      <td>Chebyshev Approximation </td>\n      <td>Series Acceleration</td>\n   </tr>\n   <tr>\n      <td>Discrete Hankel Transforms </td>\n      <td>Root-Finding</td>\n   </tr>\n   <tr>\n      <td>Minimization </td>\n      <td>Least-Squares Fitting</td>\n   </tr>\n   <tr>\n      <td>Physical Constants </td>\n      <td>IEEE Floating-Point</td>\n   </tr>\n   <tr>\n      <td>Discrete Wavelet Transforms </td>\n      <td>Basis splines</td>\n   </tr>\n</table>\n{% endraw %}\n\nGSL的Linux下的配置很简单，照着它的INSTALL文件一步一步来就可以了。CMAKE大法HAO!\n\n``` bash\n./configure\nmake\nmake install\nmake clean\n```\n\n同样的，GSL也可以在Windows环境下配置，下面记录了如何在Windows环境下使用 Visual Studio 和 CMakeGUI 编译测试GSL。\n\n## 使用CMAKE编译成.SLN文件\n\n打开CMAKEGUI，将输入代码路径选为GSL源代码地址，输出路径设为自己想要的输出路径。点击 “Configure“，选择Visual Studio2013为编译器，点击Finish后会进行必要的配置。然后将表格里面的选项都打上勾，再次点击”Configure“，等待完成之后点击”Generate“。完成之后，就可以在输出路径下看到GSL.sln文件了。\n\n## 使用Visual Studio生成解决方案\n\n使用 Visual Studio 打开刚才生成的.SLN文件，分别在Debug和Release模式下生成解决方案，等待完成即可。\n\n当完成后，你应该可以在路径下看到这样一张图，我们主要关注的文件夹是\\bin，\\gsl，\\Debug和\\Release。\n\n\n## 加入环境变量 \n\n修改环境变量的Path，将\\GSL_Build_Path\\bin\\Debug加入，这主要是为了\\Debug文件夹下面的gsl.dll文件。如果不进行这一步的话，一会虽然可以编译，但是却不能运行。\n\n这里顺便注释一句，当使用第三方库的时候，如果需要动态链接库的支持，其中一种方法就是将DLL文件的路径加入到Path中去。\n\n## 建立Visual Studio属性表\n\nVisual Studio可以通过建立工程属性表的方法来配置工程选项，一个OpenCV的例子可以参见Yuanbo She的这篇博文 [Opencv 完美配置攻略 2014 (Win8.1 + Opencv 2.4.8 + VS 2013)](http://my.phirobot.com/blog/2014-02-opencv_configuration_in_vs.html)。\n\n配置文件中主要是包含文件和静态链接库LIB的路径设置。下面把我的贴出来，只需要根据GSL的生成路径做相应修改即可。注意我的属性表中保留了OpenCV的内容，如果不需要的话，尽可以删掉。上面的博文对这张属性表如何配置讲得很清楚，有问题可以去参考。\n\n``` html\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n  <ImportGroup Label=\"PropertySheets\" />\n  <PropertyGroup Label=\"UserMacros\" />\n  <PropertyGroup>\n        <IncludePath>$(OPENCV249)\\include;E:\\GSLCode\\gsl-build\\;$(IncludePath)</IncludePath>\n        <LibraryPath Condition=\"'$(Platform)'=='Win32'\">$(OPENCV249)\\x86\\vc12\\lib;E:\\GSLCode\\gsl-build\\Debug;$(LibraryPath)</LibraryPath>\n        <LibraryPath Condition=\"'$(Platform)'=='X64'\">$(OPENCV249)\\x64\\vc12\\lib;E:\\GSLCode\\gsl-build\\Debug;$(LibraryPath)</LibraryPath>\n  </PropertyGroup>\n  <ItemDefinitionGroup>\n        <Link Condition=\"'$(Configuration)'=='Debug'\">\n          <AdditionalDependencies>opencv_calib3d249d.lib;opencv_contrib249d.lib;opencv_core249d.lib;opencv_features2d249d.lib;opencv_flann249d.lib;opencv_gpu249d.lib;opencv_highgui249d.lib;opencv_imgproc249d.lib;opencv_legacy249d.lib;opencv_ml249d.lib;opencv_nonfree249d.lib;opencv_objdetect249d.lib;opencv_ocl249d.lib;opencv_photo249d.lib;opencv_stitching249d.lib;opencv_superres249d.lib;opencv_ts249d.lib;opencv_video249d.lib;opencv_videostab249d.lib;gsl.lib;gslcblas.lib;%(AdditionalDependencies)</AdditionalDependencies>\n        </Link>\n        <Link Condition=\"'$(Configuration)'=='Release'\">\n          <AdditionalDependencies>opencv_calib3d249.lib;opencv_contrib249.lib;opencv_core249.lib;opencv_features2d249.lib;opencv_flann249.lib;opencv_gpu249.lib;opencv_highgui249.lib;opencv_imgproc249.lib;opencv_legacy249.lib;opencv_ml249.lib;opencv_nonfree249.lib;opencv_objdetect249.lib;opencv_ocl249.lib;opencv_photo249.lib;opencv_stitching249.lib;opencv_superres249.lib;opencv_ts249.lib;opencv_video249.lib;opencv_videostab249.lib;gsl.lib;gslcblas.lib;%(AdditionalDependencies)</AdditionalDependencies>\n        </Link>\n  </ItemDefinitionGroup>\n  <ItemGroup />\n</Project>\n```\n\n在以后建立Visual Studio工程的时候，在属性窗口直接添加现有属性表就可以了！\n\n## 测试\n\n在项目网站的教程上直接找到一段代码，进行测试，输出贝塞尔函数的值。\n\n\n``` cpp\n#include <stdio.h>\n#include <gsl/gsl_sf_bessel.h>\nint main(void)\n{\n\tdouble x = 5.0;\n\tdouble y = gsl_sf_bessel_J0(x);\n\tprintf(\"J0(%g) = %.18e\\n\", x, y);\n\treturn 0;\n}\n```\n\n控制台输出正确：\n{% raw %}\n<p><img src=\"http://i.imgur.com/uXhVvwS.jpg\" width=\"600\" height=\"200\"></p>\n{% endraw %}\n","slug":"compileGSLUseVS","published":1,"updated":"2017-01-22T13:47:59.000Z","_id":"ciy8pr52o0000nk1hlsd99g2u","comments":1,"layout":"post","photos":[],"link":"","content":"<p>GSL是一个GNU支持的科学计算库，提供了很丰富的数值计算方法。<a href=\"http://www.gnu.org/software/gsl/\" target=\"_blank\" rel=\"external\">GSL 的项目主页</a>提供的说明来看，它支持如下的科学计算：</p>\n<p>（下面的这张表格的HTML使用的是<a href=\"http://pressbin.com/tools/excel_to_html_table/index.html\" target=\"_blank\" rel=\"external\">No-Cruft Excel to HTML Table Converter</a>生成的）<br>\n<table>\n   <tr>\n      <td>Complex Numbers </td>\n      <td>Roots of Polynomials</td>\n   </tr>\n   <tr>\n      <td>Special Functions </td>\n      <td>Vectors and Matrices</td>\n   </tr>\n   <tr>\n      <td>Permutations </td>\n      <td>Sorting</td>\n   </tr>\n   <tr>\n      <td>BLAS Support </td>\n      <td>Linear Algebra</td>\n   </tr>\n   <tr>\n      <td>Eigensystems </td>\n      <td>Fast Fourier Transforms</td>\n   </tr>\n   <tr>\n      <td>Quadrature </td>\n      <td>Random Numbers</td>\n   </tr>\n   <tr>\n      <td>Quasi-Random Sequences </td>\n      <td>Random Distributions</td>\n   </tr>\n   <tr>\n      <td>Statistics </td>\n      <td>Histograms</td>\n   </tr>\n   <tr>\n      <td>N-Tuples </td>\n      <td>Monte Carlo Integration</td>\n   </tr>\n   <tr>\n      <td>Simulated Annealing </td>\n      <td>Differential Equations</td>\n   </tr>\n   <tr>\n      <td>Interpolation </td>\n      <td>Numerical Differentiation</td>\n   </tr>\n   <tr>\n      <td>Chebyshev Approximation </td>\n      <td>Series Acceleration</td>\n   </tr>\n   <tr>\n      <td>Discrete Hankel Transforms </td>\n      <td>Root-Finding</td>\n   </tr>\n   <tr>\n      <td>Minimization </td>\n      <td>Least-Squares Fitting</td>\n   </tr>\n   <tr>\n      <td>Physical Constants </td>\n      <td>IEEE Floating-Point</td>\n   </tr>\n   <tr>\n      <td>Discrete Wavelet Transforms </td>\n      <td>Basis splines</td>\n   </tr>\n</table>\n</p>\n<p>GSL的Linux下的配置很简单，照着它的INSTALL文件一步一步来就可以了。CMAKE大法HAO!</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">./configure</div><div class=\"line\">make</div><div class=\"line\">make install</div><div class=\"line\">make clean</div></pre></td></tr></table></figure>\n<p>同样的，GSL也可以在Windows环境下配置，下面记录了如何在Windows环境下使用 Visual Studio 和 CMakeGUI 编译测试GSL。</p>\n<h2 id=\"使用CMAKE编译成-SLN文件\"><a href=\"#使用CMAKE编译成-SLN文件\" class=\"headerlink\" title=\"使用CMAKE编译成.SLN文件\"></a>使用CMAKE编译成.SLN文件</h2><p>打开CMAKEGUI，将输入代码路径选为GSL源代码地址，输出路径设为自己想要的输出路径。点击 “Configure“，选择Visual Studio2013为编译器，点击Finish后会进行必要的配置。然后将表格里面的选项都打上勾，再次点击”Configure“，等待完成之后点击”Generate“。完成之后，就可以在输出路径下看到GSL.sln文件了。</p>\n<h2 id=\"使用Visual-Studio生成解决方案\"><a href=\"#使用Visual-Studio生成解决方案\" class=\"headerlink\" title=\"使用Visual Studio生成解决方案\"></a>使用Visual Studio生成解决方案</h2><p>使用 Visual Studio 打开刚才生成的.SLN文件，分别在Debug和Release模式下生成解决方案，等待完成即可。</p>\n<p>当完成后，你应该可以在路径下看到这样一张图，我们主要关注的文件夹是\\bin，\\gsl，\\Debug和\\Release。</p>\n<h2 id=\"加入环境变量\"><a href=\"#加入环境变量\" class=\"headerlink\" title=\"加入环境变量\"></a>加入环境变量</h2><p>修改环境变量的Path，将\\GSL_Build_Path\\bin\\Debug加入，这主要是为了\\Debug文件夹下面的gsl.dll文件。如果不进行这一步的话，一会虽然可以编译，但是却不能运行。</p>\n<p>这里顺便注释一句，当使用第三方库的时候，如果需要动态链接库的支持，其中一种方法就是将DLL文件的路径加入到Path中去。</p>\n<h2 id=\"建立Visual-Studio属性表\"><a href=\"#建立Visual-Studio属性表\" class=\"headerlink\" title=\"建立Visual Studio属性表\"></a>建立Visual Studio属性表</h2><p>Visual Studio可以通过建立工程属性表的方法来配置工程选项，一个OpenCV的例子可以参见Yuanbo She的这篇博文 <a href=\"http://my.phirobot.com/blog/2014-02-opencv_configuration_in_vs.html\" target=\"_blank\" rel=\"external\">Opencv 完美配置攻略 2014 (Win8.1 + Opencv 2.4.8 + VS 2013)</a>。</p>\n<p>配置文件中主要是包含文件和静态链接库LIB的路径设置。下面把我的贴出来，只需要根据GSL的生成路径做相应修改即可。注意我的属性表中保留了OpenCV的内容，如果不需要的话，尽可以删掉。上面的博文对这张属性表如何配置讲得很清楚，有问题可以去参考。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Project</span> <span class=\"attr\">ToolsVersion</span>=<span class=\"string\">\"4.0\"</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/developer/msbuild/2003\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ImportGroup</span> <span class=\"attr\">Label</span>=<span class=\"string\">\"PropertySheets\"</span> /&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">PropertyGroup</span> <span class=\"attr\">Label</span>=<span class=\"string\">\"UserMacros\"</span> /&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">PropertyGroup</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">IncludePath</span>&gt;</span>$(OPENCV249)\\include;E:\\GSLCode\\gsl-build\\;$(IncludePath)<span class=\"tag\">&lt;/<span class=\"name\">IncludePath</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">LibraryPath</span> <span class=\"attr\">Condition</span>=<span class=\"string\">\"'$(Platform)'=='Win32'\"</span>&gt;</span>$(OPENCV249)\\x86\\vc12\\lib;E:\\GSLCode\\gsl-build\\Debug;$(LibraryPath)<span class=\"tag\">&lt;/<span class=\"name\">LibraryPath</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">LibraryPath</span> <span class=\"attr\">Condition</span>=<span class=\"string\">\"'$(Platform)'=='X64'\"</span>&gt;</span>$(OPENCV249)\\x64\\vc12\\lib;E:\\GSLCode\\gsl-build\\Debug;$(LibraryPath)<span class=\"tag\">&lt;/<span class=\"name\">LibraryPath</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">PropertyGroup</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ItemDefinitionGroup</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">Condition</span>=<span class=\"string\">\"'$(Configuration)'=='Debug'\"</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">AdditionalDependencies</span>&gt;</span>opencv_calib3d249d.lib;opencv_contrib249d.lib;opencv_core249d.lib;opencv_features2d249d.lib;opencv_flann249d.lib;opencv_gpu249d.lib;opencv_highgui249d.lib;opencv_imgproc249d.lib;opencv_legacy249d.lib;opencv_ml249d.lib;opencv_nonfree249d.lib;opencv_objdetect249d.lib;opencv_ocl249d.lib;opencv_photo249d.lib;opencv_stitching249d.lib;opencv_superres249d.lib;opencv_ts249d.lib;opencv_video249d.lib;opencv_videostab249d.lib;gsl.lib;gslcblas.lib;%(AdditionalDependencies)<span class=\"tag\">&lt;/<span class=\"name\">AdditionalDependencies</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">Condition</span>=<span class=\"string\">\"'$(Configuration)'=='Release'\"</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">AdditionalDependencies</span>&gt;</span>opencv_calib3d249.lib;opencv_contrib249.lib;opencv_core249.lib;opencv_features2d249.lib;opencv_flann249.lib;opencv_gpu249.lib;opencv_highgui249.lib;opencv_imgproc249.lib;opencv_legacy249.lib;opencv_ml249.lib;opencv_nonfree249.lib;opencv_objdetect249.lib;opencv_ocl249.lib;opencv_photo249.lib;opencv_stitching249.lib;opencv_superres249.lib;opencv_ts249.lib;opencv_video249.lib;opencv_videostab249.lib;gsl.lib;gslcblas.lib;%(AdditionalDependencies)<span class=\"tag\">&lt;/<span class=\"name\">AdditionalDependencies</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ItemDefinitionGroup</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ItemGroup</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Project</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>在以后建立Visual Studio工程的时候，在属性窗口直接添加现有属性表就可以了！</p>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>在项目网站的教程上直接找到一段代码，进行测试，输出贝塞尔函数的值。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;gsl/gsl_sf_bessel.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"keyword\">double</span> x = <span class=\"number\">5.0</span>;</div><div class=\"line\">\t<span class=\"keyword\">double</span> y = gsl_sf_bessel_J0(x);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"J0(%g) = %.18e\\n\"</span>, x, y);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>控制台输出正确：<br>\n</p><p><img src=\"http://i.imgur.com/uXhVvwS.jpg\" width=\"600\" height=\"200\"></p>\n<p></p>\n","excerpt":"","more":"<p>GSL是一个GNU支持的科学计算库，提供了很丰富的数值计算方法。<a href=\"http://www.gnu.org/software/gsl/\">GSL 的项目主页</a>提供的说明来看，它支持如下的科学计算：</p>\n<p>（下面的这张表格的HTML使用的是<a href=\"http://pressbin.com/tools/excel_to_html_table/index.html\">No-Cruft Excel to HTML Table Converter</a>生成的）<br>\n<table>\n   <tr>\n      <td>Complex Numbers </td>\n      <td>Roots of Polynomials</td>\n   </tr>\n   <tr>\n      <td>Special Functions </td>\n      <td>Vectors and Matrices</td>\n   </tr>\n   <tr>\n      <td>Permutations </td>\n      <td>Sorting</td>\n   </tr>\n   <tr>\n      <td>BLAS Support </td>\n      <td>Linear Algebra</td>\n   </tr>\n   <tr>\n      <td>Eigensystems </td>\n      <td>Fast Fourier Transforms</td>\n   </tr>\n   <tr>\n      <td>Quadrature </td>\n      <td>Random Numbers</td>\n   </tr>\n   <tr>\n      <td>Quasi-Random Sequences </td>\n      <td>Random Distributions</td>\n   </tr>\n   <tr>\n      <td>Statistics </td>\n      <td>Histograms</td>\n   </tr>\n   <tr>\n      <td>N-Tuples </td>\n      <td>Monte Carlo Integration</td>\n   </tr>\n   <tr>\n      <td>Simulated Annealing </td>\n      <td>Differential Equations</td>\n   </tr>\n   <tr>\n      <td>Interpolation </td>\n      <td>Numerical Differentiation</td>\n   </tr>\n   <tr>\n      <td>Chebyshev Approximation </td>\n      <td>Series Acceleration</td>\n   </tr>\n   <tr>\n      <td>Discrete Hankel Transforms </td>\n      <td>Root-Finding</td>\n   </tr>\n   <tr>\n      <td>Minimization </td>\n      <td>Least-Squares Fitting</td>\n   </tr>\n   <tr>\n      <td>Physical Constants </td>\n      <td>IEEE Floating-Point</td>\n   </tr>\n   <tr>\n      <td>Discrete Wavelet Transforms </td>\n      <td>Basis splines</td>\n   </tr>\n</table>\n</p>\n<p>GSL的Linux下的配置很简单，照着它的INSTALL文件一步一步来就可以了。CMAKE大法HAO!</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">./configure</div><div class=\"line\">make</div><div class=\"line\">make install</div><div class=\"line\">make clean</div></pre></td></tr></table></figure>\n<p>同样的，GSL也可以在Windows环境下配置，下面记录了如何在Windows环境下使用 Visual Studio 和 CMakeGUI 编译测试GSL。</p>\n<h2 id=\"使用CMAKE编译成-SLN文件\"><a href=\"#使用CMAKE编译成-SLN文件\" class=\"headerlink\" title=\"使用CMAKE编译成.SLN文件\"></a>使用CMAKE编译成.SLN文件</h2><p>打开CMAKEGUI，将输入代码路径选为GSL源代码地址，输出路径设为自己想要的输出路径。点击 “Configure“，选择Visual Studio2013为编译器，点击Finish后会进行必要的配置。然后将表格里面的选项都打上勾，再次点击”Configure“，等待完成之后点击”Generate“。完成之后，就可以在输出路径下看到GSL.sln文件了。</p>\n<h2 id=\"使用Visual-Studio生成解决方案\"><a href=\"#使用Visual-Studio生成解决方案\" class=\"headerlink\" title=\"使用Visual Studio生成解决方案\"></a>使用Visual Studio生成解决方案</h2><p>使用 Visual Studio 打开刚才生成的.SLN文件，分别在Debug和Release模式下生成解决方案，等待完成即可。</p>\n<p>当完成后，你应该可以在路径下看到这样一张图，我们主要关注的文件夹是\\bin，\\gsl，\\Debug和\\Release。</p>\n<h2 id=\"加入环境变量\"><a href=\"#加入环境变量\" class=\"headerlink\" title=\"加入环境变量\"></a>加入环境变量</h2><p>修改环境变量的Path，将\\GSL_Build_Path\\bin\\Debug加入，这主要是为了\\Debug文件夹下面的gsl.dll文件。如果不进行这一步的话，一会虽然可以编译，但是却不能运行。</p>\n<p>这里顺便注释一句，当使用第三方库的时候，如果需要动态链接库的支持，其中一种方法就是将DLL文件的路径加入到Path中去。</p>\n<h2 id=\"建立Visual-Studio属性表\"><a href=\"#建立Visual-Studio属性表\" class=\"headerlink\" title=\"建立Visual Studio属性表\"></a>建立Visual Studio属性表</h2><p>Visual Studio可以通过建立工程属性表的方法来配置工程选项，一个OpenCV的例子可以参见Yuanbo She的这篇博文 <a href=\"http://my.phirobot.com/blog/2014-02-opencv_configuration_in_vs.html\">Opencv 完美配置攻略 2014 (Win8.1 + Opencv 2.4.8 + VS 2013)</a>。</p>\n<p>配置文件中主要是包含文件和静态链接库LIB的路径设置。下面把我的贴出来，只需要根据GSL的生成路径做相应修改即可。注意我的属性表中保留了OpenCV的内容，如果不需要的话，尽可以删掉。上面的博文对这张属性表如何配置讲得很清楚，有问题可以去参考。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Project</span> <span class=\"attr\">ToolsVersion</span>=<span class=\"string\">\"4.0\"</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/developer/msbuild/2003\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ImportGroup</span> <span class=\"attr\">Label</span>=<span class=\"string\">\"PropertySheets\"</span> /&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">PropertyGroup</span> <span class=\"attr\">Label</span>=<span class=\"string\">\"UserMacros\"</span> /&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">PropertyGroup</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">IncludePath</span>&gt;</span>$(OPENCV249)\\include;E:\\GSLCode\\gsl-build\\;$(IncludePath)<span class=\"tag\">&lt;/<span class=\"name\">IncludePath</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">LibraryPath</span> <span class=\"attr\">Condition</span>=<span class=\"string\">\"'$(Platform)'=='Win32'\"</span>&gt;</span>$(OPENCV249)\\x86\\vc12\\lib;E:\\GSLCode\\gsl-build\\Debug;$(LibraryPath)<span class=\"tag\">&lt;/<span class=\"name\">LibraryPath</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">LibraryPath</span> <span class=\"attr\">Condition</span>=<span class=\"string\">\"'$(Platform)'=='X64'\"</span>&gt;</span>$(OPENCV249)\\x64\\vc12\\lib;E:\\GSLCode\\gsl-build\\Debug;$(LibraryPath)<span class=\"tag\">&lt;/<span class=\"name\">LibraryPath</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">PropertyGroup</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ItemDefinitionGroup</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">Condition</span>=<span class=\"string\">\"'$(Configuration)'=='Debug'\"</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">AdditionalDependencies</span>&gt;</span>opencv_calib3d249d.lib;opencv_contrib249d.lib;opencv_core249d.lib;opencv_features2d249d.lib;opencv_flann249d.lib;opencv_gpu249d.lib;opencv_highgui249d.lib;opencv_imgproc249d.lib;opencv_legacy249d.lib;opencv_ml249d.lib;opencv_nonfree249d.lib;opencv_objdetect249d.lib;opencv_ocl249d.lib;opencv_photo249d.lib;opencv_stitching249d.lib;opencv_superres249d.lib;opencv_ts249d.lib;opencv_video249d.lib;opencv_videostab249d.lib;gsl.lib;gslcblas.lib;%(AdditionalDependencies)<span class=\"tag\">&lt;/<span class=\"name\">AdditionalDependencies</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Link</span> <span class=\"attr\">Condition</span>=<span class=\"string\">\"'$(Configuration)'=='Release'\"</span>&gt;</span></div><div class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">AdditionalDependencies</span>&gt;</span>opencv_calib3d249.lib;opencv_contrib249.lib;opencv_core249.lib;opencv_features2d249.lib;opencv_flann249.lib;opencv_gpu249.lib;opencv_highgui249.lib;opencv_imgproc249.lib;opencv_legacy249.lib;opencv_ml249.lib;opencv_nonfree249.lib;opencv_objdetect249.lib;opencv_ocl249.lib;opencv_photo249.lib;opencv_stitching249.lib;opencv_superres249.lib;opencv_ts249.lib;opencv_video249.lib;opencv_videostab249.lib;gsl.lib;gslcblas.lib;%(AdditionalDependencies)<span class=\"tag\">&lt;/<span class=\"name\">AdditionalDependencies</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">Link</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ItemDefinitionGroup</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ItemGroup</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Project</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>在以后建立Visual Studio工程的时候，在属性窗口直接添加现有属性表就可以了！</p>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>在项目网站的教程上直接找到一段代码，进行测试，输出贝塞尔函数的值。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;gsl/gsl_sf_bessel.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">double</span> x = <span class=\"number\">5.0</span>;</div><div class=\"line\">\t<span class=\"keyword\">double</span> y = gsl_sf_bessel_J0(x);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"J0(%g) = %.18e\\n\"</span>, x, y);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>控制台输出正确：<br>\n<p><img src=\"http://i.imgur.com/uXhVvwS.jpg\" width=\"600\" height=\"200\"></p>\n</p>\n"},{"title":"CS131_线代基础","date":"2017-01-22T07:38:01.000Z","_content":"\n## 课程简介\nCS131课程(Computer Vision: Foundations and Applications)，是斯坦福大学Li Feifei实验室开设的一门计算机视觉入门基础课程，[该课程](http://vision.stanford.edu/teaching/cs131_fall1617/index.html)目的在于为刚接触计算机视觉领域的学生提供基本原理和应用介绍。目前2016年冬季课程刚刚结束。CS131博客系列主要是关于本课的slide知识点总结与作业重点问题归纳，作为个人学习本门课程的心得体会和复习材料。\n\n由于是个人项目，所以会比较随意，只对个人感兴趣的内容做一总结。这篇文章是对课前的[线代基础](http://vision.stanford.edu/teaching/cs131_fall1617/lectures/lecture2_linalg_review_cs131_2016.pdf)做一复习与整理。\n\n## 向量与矩阵\n数字图像可以看做二维矩阵，向量是特殊的矩阵，本课程默认的向量都是列向量。\nslide中给出了一些矩阵行列式和迹的性质，都比较简单，这里不再多说。\n## 矩阵作为线性变换\n通过线代知识，我们知道，在线性空间中，如果给定一组基，线性变换可以通过对应的矩阵来进行描述。\n\n### scale变换\n对角阵可以用来表示放缩变换。\n$$\n\\begin{bmatrix}\ns_x & 0\\\\\\\\\n0 & s_y\n\\end{bmatrix}\\begin{bmatrix}\nx\\\\\\\\\ny\n\\end{bmatrix} = \\begin{bmatrix}\ns_xx\\\\\\\\\ns_yy\n\\end{bmatrix}\n$$\n\n### 旋转变换\n如图所示，逆时针旋转$theta$角度，对应的旋转矩阵为：\n![旋转变换](/img/rotation.png)\n$$\n\\mathbf{R} = \\begin{bmatrix}\n\\cos\\theta &-\\sin\\theta \\\\\\\\\n\\sin\\theta &\\cos\\theta\n\\end{bmatrix}\n$$\n\n### 齐次变换(Homogeneous Transform)\n只用上面的二维矩阵不能表达平移，使用齐次矩阵可以表达放缩，旋转和平移操作。\n$$\n\\mathbf{H} =\\begin{bmatrix}\na & b & t_x\\\\\\\\\nc & d & t_y\\\\\\\\\n0 & 0 & 1\n\\end{bmatrix},\\mathbf{H}\\begin{bmatrix}\nx\\\\\\\\\ny\\\\\\\\\n1\\\\\\\\\n\\end{bmatrix}=\\begin{bmatrix}\nax+by+t_x\\\\\\\\\ncx+dy+t_y\\\\\\\\\n1\n\\end{bmatrix}\n$$\n","source":"_posts/CS131.md","raw":"---\ntitle: CS131_线代基础\ndate: 2017-01-22 15:38:01\ntags:\n    - CS131\n    - 公开课\n---\n\n## 课程简介\nCS131课程(Computer Vision: Foundations and Applications)，是斯坦福大学Li Feifei实验室开设的一门计算机视觉入门基础课程，[该课程](http://vision.stanford.edu/teaching/cs131_fall1617/index.html)目的在于为刚接触计算机视觉领域的学生提供基本原理和应用介绍。目前2016年冬季课程刚刚结束。CS131博客系列主要是关于本课的slide知识点总结与作业重点问题归纳，作为个人学习本门课程的心得体会和复习材料。\n\n由于是个人项目，所以会比较随意，只对个人感兴趣的内容做一总结。这篇文章是对课前的[线代基础](http://vision.stanford.edu/teaching/cs131_fall1617/lectures/lecture2_linalg_review_cs131_2016.pdf)做一复习与整理。\n\n## 向量与矩阵\n数字图像可以看做二维矩阵，向量是特殊的矩阵，本课程默认的向量都是列向量。\nslide中给出了一些矩阵行列式和迹的性质，都比较简单，这里不再多说。\n## 矩阵作为线性变换\n通过线代知识，我们知道，在线性空间中，如果给定一组基，线性变换可以通过对应的矩阵来进行描述。\n\n### scale变换\n对角阵可以用来表示放缩变换。\n$$\n\\begin{bmatrix}\ns_x & 0\\\\\\\\\n0 & s_y\n\\end{bmatrix}\\begin{bmatrix}\nx\\\\\\\\\ny\n\\end{bmatrix} = \\begin{bmatrix}\ns_xx\\\\\\\\\ns_yy\n\\end{bmatrix}\n$$\n\n### 旋转变换\n如图所示，逆时针旋转$theta$角度，对应的旋转矩阵为：\n![旋转变换](/img/rotation.png)\n$$\n\\mathbf{R} = \\begin{bmatrix}\n\\cos\\theta &-\\sin\\theta \\\\\\\\\n\\sin\\theta &\\cos\\theta\n\\end{bmatrix}\n$$\n\n### 齐次变换(Homogeneous Transform)\n只用上面的二维矩阵不能表达平移，使用齐次矩阵可以表达放缩，旋转和平移操作。\n$$\n\\mathbf{H} =\\begin{bmatrix}\na & b & t_x\\\\\\\\\nc & d & t_y\\\\\\\\\n0 & 0 & 1\n\\end{bmatrix},\\mathbf{H}\\begin{bmatrix}\nx\\\\\\\\\ny\\\\\\\\\n1\\\\\\\\\n\\end{bmatrix}=\\begin{bmatrix}\nax+by+t_x\\\\\\\\\ncx+dy+t_y\\\\\\\\\n1\n\\end{bmatrix}\n$$\n","slug":"CS131","published":1,"updated":"2017-01-22T13:42:12.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciy8pr52u0002nk1hbkk51k62","content":"<h2 id=\"课程简介\"><a href=\"#课程简介\" class=\"headerlink\" title=\"课程简介\"></a>课程简介</h2><p>CS131课程(Computer Vision: Foundations and Applications)，是斯坦福大学Li Feifei实验室开设的一门计算机视觉入门基础课程，<a href=\"http://vision.stanford.edu/teaching/cs131_fall1617/index.html\" target=\"_blank\" rel=\"external\">该课程</a>目的在于为刚接触计算机视觉领域的学生提供基本原理和应用介绍。目前2016年冬季课程刚刚结束。CS131博客系列主要是关于本课的slide知识点总结与作业重点问题归纳，作为个人学习本门课程的心得体会和复习材料。</p>\n<p>由于是个人项目，所以会比较随意，只对个人感兴趣的内容做一总结。这篇文章是对课前的<a href=\"http://vision.stanford.edu/teaching/cs131_fall1617/lectures/lecture2_linalg_review_cs131_2016.pdf\" target=\"_blank\" rel=\"external\">线代基础</a>做一复习与整理。</p>\n<h2 id=\"向量与矩阵\"><a href=\"#向量与矩阵\" class=\"headerlink\" title=\"向量与矩阵\"></a>向量与矩阵</h2><p>数字图像可以看做二维矩阵，向量是特殊的矩阵，本课程默认的向量都是列向量。<br>slide中给出了一些矩阵行列式和迹的性质，都比较简单，这里不再多说。</p>\n<h2 id=\"矩阵作为线性变换\"><a href=\"#矩阵作为线性变换\" class=\"headerlink\" title=\"矩阵作为线性变换\"></a>矩阵作为线性变换</h2><p>通过线代知识，我们知道，在线性空间中，如果给定一组基，线性变换可以通过对应的矩阵来进行描述。</p>\n<h3 id=\"scale变换\"><a href=\"#scale变换\" class=\"headerlink\" title=\"scale变换\"></a>scale变换</h3><p>对角阵可以用来表示放缩变换。<br>$$<br>\\begin{bmatrix}<br>s_x &amp; 0\\\\<br>0 &amp; s_y<br>\\end{bmatrix}\\begin{bmatrix}<br>x\\\\<br>y<br>\\end{bmatrix} = \\begin{bmatrix}<br>s_xx\\\\<br>s_yy<br>\\end{bmatrix}<br>$$</p>\n<h3 id=\"旋转变换\"><a href=\"#旋转变换\" class=\"headerlink\" title=\"旋转变换\"></a>旋转变换</h3><p>如图所示，逆时针旋转$theta$角度，对应的旋转矩阵为：<br><img src=\"/img/rotation.png\" alt=\"旋转变换\"><br>$$<br>\\mathbf{R} = \\begin{bmatrix}<br>\\cos\\theta &amp;-\\sin\\theta \\\\<br>\\sin\\theta &amp;\\cos\\theta<br>\\end{bmatrix}<br>$$</p>\n<h3 id=\"齐次变换-Homogeneous-Transform\"><a href=\"#齐次变换-Homogeneous-Transform\" class=\"headerlink\" title=\"齐次变换(Homogeneous Transform)\"></a>齐次变换(Homogeneous Transform)</h3><p>只用上面的二维矩阵不能表达平移，使用齐次矩阵可以表达放缩，旋转和平移操作。<br>$$<br>\\mathbf{H} =\\begin{bmatrix}<br>a &amp; b &amp; t_x\\\\<br>c &amp; d &amp; t_y\\\\<br>0 &amp; 0 &amp; 1<br>\\end{bmatrix},\\mathbf{H}\\begin{bmatrix}<br>x\\\\<br>y\\\\<br>1\\\\<br>\\end{bmatrix}=\\begin{bmatrix}<br>ax+by+t_x\\\\<br>cx+dy+t_y\\\\<br>1<br>\\end{bmatrix}<br>$$</p>\n","excerpt":"","more":"<h2 id=\"课程简介\"><a href=\"#课程简介\" class=\"headerlink\" title=\"课程简介\"></a>课程简介</h2><p>CS131课程(Computer Vision: Foundations and Applications)，是斯坦福大学Li Feifei实验室开设的一门计算机视觉入门基础课程，<a href=\"http://vision.stanford.edu/teaching/cs131_fall1617/index.html\">该课程</a>目的在于为刚接触计算机视觉领域的学生提供基本原理和应用介绍。目前2016年冬季课程刚刚结束。CS131博客系列主要是关于本课的slide知识点总结与作业重点问题归纳，作为个人学习本门课程的心得体会和复习材料。</p>\n<p>由于是个人项目，所以会比较随意，只对个人感兴趣的内容做一总结。这篇文章是对课前的<a href=\"http://vision.stanford.edu/teaching/cs131_fall1617/lectures/lecture2_linalg_review_cs131_2016.pdf\">线代基础</a>做一复习与整理。</p>\n<h2 id=\"向量与矩阵\"><a href=\"#向量与矩阵\" class=\"headerlink\" title=\"向量与矩阵\"></a>向量与矩阵</h2><p>数字图像可以看做二维矩阵，向量是特殊的矩阵，本课程默认的向量都是列向量。<br>slide中给出了一些矩阵行列式和迹的性质，都比较简单，这里不再多说。</p>\n<h2 id=\"矩阵作为线性变换\"><a href=\"#矩阵作为线性变换\" class=\"headerlink\" title=\"矩阵作为线性变换\"></a>矩阵作为线性变换</h2><p>通过线代知识，我们知道，在线性空间中，如果给定一组基，线性变换可以通过对应的矩阵来进行描述。</p>\n<h3 id=\"scale变换\"><a href=\"#scale变换\" class=\"headerlink\" title=\"scale变换\"></a>scale变换</h3><p>对角阵可以用来表示放缩变换。<br>$$<br>\\begin{bmatrix}<br>s_x &amp; 0\\\\<br>0 &amp; s_y<br>\\end{bmatrix}\\begin{bmatrix}<br>x\\\\<br>y<br>\\end{bmatrix} = \\begin{bmatrix}<br>s_xx\\\\<br>s_yy<br>\\end{bmatrix}<br>$$</p>\n<h3 id=\"旋转变换\"><a href=\"#旋转变换\" class=\"headerlink\" title=\"旋转变换\"></a>旋转变换</h3><p>如图所示，逆时针旋转$theta$角度，对应的旋转矩阵为：<br><img src=\"/img/rotation.png\" alt=\"旋转变换\"><br>$$<br>\\mathbf{R} = \\begin{bmatrix}<br>\\cos\\theta &amp;-\\sin\\theta \\\\<br>\\sin\\theta &amp;\\cos\\theta<br>\\end{bmatrix}<br>$$</p>\n<h3 id=\"齐次变换-Homogeneous-Transform\"><a href=\"#齐次变换-Homogeneous-Transform\" class=\"headerlink\" title=\"齐次变换(Homogeneous Transform)\"></a>齐次变换(Homogeneous Transform)</h3><p>只用上面的二维矩阵不能表达平移，使用齐次矩阵可以表达放缩，旋转和平移操作。<br>$$<br>\\mathbf{H} =\\begin{bmatrix}<br>a &amp; b &amp; t_x\\\\<br>c &amp; d &amp; t_y\\\\<br>0 &amp; 0 &amp; 1<br>\\end{bmatrix},\\mathbf{H}\\begin{bmatrix}<br>x\\\\<br>y\\\\<br>1\\\\<br>\\end{bmatrix}=\\begin{bmatrix}<br>ax+by+t_x\\\\<br>cx+dy+t_y\\\\<br>1<br>\\end{bmatrix}<br>$$</p>\n"},{"title":"Hello World","date":"2016-12-16T11:00:00.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n### Code highlight\n\nHello World!\n\n``` cpp\n#include <iostream>\nint main() {\n    std::cout << \"HelloWorld\\n\";\n}\n```\n\n``` py\nprint 'HelloWorld'\n```\n\n### Latex Support by Mathjax\n\nMass-energy equation by Einstein: $E = mc^2$\n\na linear equation:\n    $$\\mathbf{A}\\mathbf{v} = \\mathbf{y}$$\n\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2016-12-16 19:00:00\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n### Code highlight\n\nHello World!\n\n``` cpp\n#include <iostream>\nint main() {\n    std::cout << \"HelloWorld\\n\";\n}\n```\n\n``` py\nprint 'HelloWorld'\n```\n\n### Latex Support by Mathjax\n\nMass-energy equation by Einstein: $E = mc^2$\n\na linear equation:\n    $$\\mathbf{A}\\mathbf{v} = \\mathbf{y}$$\n\n","slug":"hello-world","published":1,"updated":"2017-01-22T13:46:08.000Z","_id":"ciy8pr52x0004nk1huapyrear","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n<h3 id=\"Code-highlight\"><a href=\"#Code-highlight\" class=\"headerlink\" title=\"Code highlight\"></a>Code highlight</h3><p>Hello World!</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"HelloWorld\\n\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">print</span> <span class=\"string\">'HelloWorld'</span></div></pre></td></tr></table></figure>\n<h3 id=\"Latex-Support-by-Mathjax\"><a href=\"#Latex-Support-by-Mathjax\" class=\"headerlink\" title=\"Latex Support by Mathjax\"></a>Latex Support by Mathjax</h3><p>Mass-energy equation by Einstein: $E = mc^2$</p>\n<p>a linear equation:<br>    $$\\mathbf{A}\\mathbf{v} = \\mathbf{y}$$</p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n<h3 id=\"Code-highlight\"><a href=\"#Code-highlight\" class=\"headerlink\" title=\"Code highlight\"></a>Code highlight</h3><p>Hello World!</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"HelloWorld\\n\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">print</span> <span class=\"string\">'HelloWorld'</span></div></pre></td></tr></table></figure>\n<h3 id=\"Latex-Support-by-Mathjax\"><a href=\"#Latex-Support-by-Mathjax\" class=\"headerlink\" title=\"Latex Support by Mathjax\"></a>Latex Support by Mathjax</h3><p>Mass-energy equation by Einstein: $E = mc^2$</p>\n<p>a linear equation:<br>    $$\\mathbf{A}\\mathbf{v} = \\mathbf{y}$$</p>\n"},{"title":"Windows环境下使用Doxygen生成注释文档","date":"2016-12-16T11:00:00.000Z","_content":"\nDoxygen 是一种很好用的代码注释生成工具，然而和很多国外的工具软件一样，在中文环境下，它的使用总是会出现一些问题，也就是中文注释文档出现乱码。经过调试，终于是解决了这个问题。\n\n## 安装 Doxygen\n\nDoxygen 在Windows平台下的安装是简单的，[Doxygen的项目主页](http://www.doxygen.nl/)提供了下载和安装的使用说明，可以下载它们的官方使用手册进行阅读。对于Windows，提供了源代码编译安装和直接安装程序安装两种方式，可以自行选择。\n\n安装成功后，使用命令行命令\n\n``` bash\ndoxygen --help\n```\n\n就可以查看帮助文档，对应参数含义一目了然，降低了入手难度。\n\n使用命令，\n\n\n``` bash\ndoxygen -g doxygen_filename\n```\n\n就可以在当前目录下建立一个doxygen配置文件，用文本编辑器打开就可以编辑里面的配置选项。\n\n使用命令，\n\n``` bash\ndoxygen doxygen_filename\n```\n\n就可以生成注释文档了。\n\n下面就来说一说对中文的支持。\n\n## 生成 HTML 格式文档\n\n中文之所以乱码，很多时候是由于编码和译码格式不同，所以我们需要先知道自己代码文件的编码方式。我的代码都是建立在Visual Studio上的，可以通过VS的高级保存选项查看自己代码文件的存储编码格式。对于中文版的VS，一般应该是GB2312。\n\n我们打开 Doxygen 的配置文件，将里面的 INPUT_ENCODING 改为我们代码文件的编码格式，这里就改成 GB2312。\n\n这样一来，编译出来的 HTML 页面就不会有中文乱码了。\n\n## 生成Latex 格式文档\n\n生成 Latex 需要本机上安装有 Latex 的编译环境。如果是中文用户，推荐的是CTEX套件，可以到他们的网站上去下载。\n\n可以看到，Doxygen为Latex文件的编译生成了make文件，我们在命令行窗口中执行make命令就可以完成编译，然而这时候会发现编译出错，pdf文档无法生成。\n\n打开生成的refman.latex文档，添加宏包 CJKutf8。然后找到 `\\begin{document}`一行，将其改为\n\n``` latex\n\\begin{document}\n\\begin{CJK}{UTF8}{gbsn} \n```\n\n也就是说为正文提供了CJK环境，这样中文文本就可以正常编译了。\n\n相应的，我们要将结尾的 `\\end{document)`改为：\n``` latex\n\\end{CJK} \n\\end{document}\n```\n\n这样，运行make命令之后，就可以看到中文的注释文档了。\n","source":"_posts/use-dosygen.md","raw":"---\ntitle: Windows环境下使用Doxygen生成注释文档\ndate: 2016-12-16 19:00:00\ntags: \n    - tool\n    - doxygen\n---\n\nDoxygen 是一种很好用的代码注释生成工具，然而和很多国外的工具软件一样，在中文环境下，它的使用总是会出现一些问题，也就是中文注释文档出现乱码。经过调试，终于是解决了这个问题。\n\n## 安装 Doxygen\n\nDoxygen 在Windows平台下的安装是简单的，[Doxygen的项目主页](http://www.doxygen.nl/)提供了下载和安装的使用说明，可以下载它们的官方使用手册进行阅读。对于Windows，提供了源代码编译安装和直接安装程序安装两种方式，可以自行选择。\n\n安装成功后，使用命令行命令\n\n``` bash\ndoxygen --help\n```\n\n就可以查看帮助文档，对应参数含义一目了然，降低了入手难度。\n\n使用命令，\n\n\n``` bash\ndoxygen -g doxygen_filename\n```\n\n就可以在当前目录下建立一个doxygen配置文件，用文本编辑器打开就可以编辑里面的配置选项。\n\n使用命令，\n\n``` bash\ndoxygen doxygen_filename\n```\n\n就可以生成注释文档了。\n\n下面就来说一说对中文的支持。\n\n## 生成 HTML 格式文档\n\n中文之所以乱码，很多时候是由于编码和译码格式不同，所以我们需要先知道自己代码文件的编码方式。我的代码都是建立在Visual Studio上的，可以通过VS的高级保存选项查看自己代码文件的存储编码格式。对于中文版的VS，一般应该是GB2312。\n\n我们打开 Doxygen 的配置文件，将里面的 INPUT_ENCODING 改为我们代码文件的编码格式，这里就改成 GB2312。\n\n这样一来，编译出来的 HTML 页面就不会有中文乱码了。\n\n## 生成Latex 格式文档\n\n生成 Latex 需要本机上安装有 Latex 的编译环境。如果是中文用户，推荐的是CTEX套件，可以到他们的网站上去下载。\n\n可以看到，Doxygen为Latex文件的编译生成了make文件，我们在命令行窗口中执行make命令就可以完成编译，然而这时候会发现编译出错，pdf文档无法生成。\n\n打开生成的refman.latex文档，添加宏包 CJKutf8。然后找到 `\\begin{document}`一行，将其改为\n\n``` latex\n\\begin{document}\n\\begin{CJK}{UTF8}{gbsn} \n```\n\n也就是说为正文提供了CJK环境，这样中文文本就可以正常编译了。\n\n相应的，我们要将结尾的 `\\end{document)`改为：\n``` latex\n\\end{CJK} \n\\end{document}\n```\n\n这样，运行make命令之后，就可以看到中文的注释文档了。\n","slug":"use-dosygen","published":1,"updated":"2017-01-22T13:46:44.000Z","_id":"ciy8pr5370006nk1hmadbbi1v","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Doxygen 是一种很好用的代码注释生成工具，然而和很多国外的工具软件一样，在中文环境下，它的使用总是会出现一些问题，也就是中文注释文档出现乱码。经过调试，终于是解决了这个问题。</p>\n<h2 id=\"安装-Doxygen\"><a href=\"#安装-Doxygen\" class=\"headerlink\" title=\"安装 Doxygen\"></a>安装 Doxygen</h2><p>Doxygen 在Windows平台下的安装是简单的，<a href=\"http://www.doxygen.nl/\" target=\"_blank\" rel=\"external\">Doxygen的项目主页</a>提供了下载和安装的使用说明，可以下载它们的官方使用手册进行阅读。对于Windows，提供了源代码编译安装和直接安装程序安装两种方式，可以自行选择。</p>\n<p>安装成功后，使用命令行命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">doxygen --help</div></pre></td></tr></table></figure>\n<p>就可以查看帮助文档，对应参数含义一目了然，降低了入手难度。</p>\n<p>使用命令，</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">doxygen -g doxygen_filename</div></pre></td></tr></table></figure>\n<p>就可以在当前目录下建立一个doxygen配置文件，用文本编辑器打开就可以编辑里面的配置选项。</p>\n<p>使用命令，</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">doxygen doxygen_filename</div></pre></td></tr></table></figure>\n<p>就可以生成注释文档了。</p>\n<p>下面就来说一说对中文的支持。</p>\n<h2 id=\"生成-HTML-格式文档\"><a href=\"#生成-HTML-格式文档\" class=\"headerlink\" title=\"生成 HTML 格式文档\"></a>生成 HTML 格式文档</h2><p>中文之所以乱码，很多时候是由于编码和译码格式不同，所以我们需要先知道自己代码文件的编码方式。我的代码都是建立在Visual Studio上的，可以通过VS的高级保存选项查看自己代码文件的存储编码格式。对于中文版的VS，一般应该是GB2312。</p>\n<p>我们打开 Doxygen 的配置文件，将里面的 INPUT_ENCODING 改为我们代码文件的编码格式，这里就改成 GB2312。</p>\n<p>这样一来，编译出来的 HTML 页面就不会有中文乱码了。</p>\n<h2 id=\"生成Latex-格式文档\"><a href=\"#生成Latex-格式文档\" class=\"headerlink\" title=\"生成Latex 格式文档\"></a>生成Latex 格式文档</h2><p>生成 Latex 需要本机上安装有 Latex 的编译环境。如果是中文用户，推荐的是CTEX套件，可以到他们的网站上去下载。</p>\n<p>可以看到，Doxygen为Latex文件的编译生成了make文件，我们在命令行窗口中执行make命令就可以完成编译，然而这时候会发现编译出错，pdf文档无法生成。</p>\n<p>打开生成的refman.latex文档，添加宏包 CJKutf8。然后找到 <code>\\begin{document}</code>一行，将其改为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">\\begin&#123;document&#125;</div><div class=\"line\">\\begin&#123;CJK&#125;&#123;UTF8&#125;&#123;gbsn&#125;</div></pre></td></tr></table></figure>\n<p>也就是说为正文提供了CJK环境，这样中文文本就可以正常编译了。</p>\n<p>相应的，我们要将结尾的 <code>\\end{document)</code>改为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">\\end&#123;CJK&#125; </div><div class=\"line\">\\end&#123;document&#125;</div></pre></td></tr></table></figure></p>\n<p>这样，运行make命令之后，就可以看到中文的注释文档了。</p>\n","excerpt":"","more":"<p>Doxygen 是一种很好用的代码注释生成工具，然而和很多国外的工具软件一样，在中文环境下，它的使用总是会出现一些问题，也就是中文注释文档出现乱码。经过调试，终于是解决了这个问题。</p>\n<h2 id=\"安装-Doxygen\"><a href=\"#安装-Doxygen\" class=\"headerlink\" title=\"安装 Doxygen\"></a>安装 Doxygen</h2><p>Doxygen 在Windows平台下的安装是简单的，<a href=\"http://www.doxygen.nl/\">Doxygen的项目主页</a>提供了下载和安装的使用说明，可以下载它们的官方使用手册进行阅读。对于Windows，提供了源代码编译安装和直接安装程序安装两种方式，可以自行选择。</p>\n<p>安装成功后，使用命令行命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">doxygen --help</div></pre></td></tr></table></figure>\n<p>就可以查看帮助文档，对应参数含义一目了然，降低了入手难度。</p>\n<p>使用命令，</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">doxygen -g doxygen_filename</div></pre></td></tr></table></figure>\n<p>就可以在当前目录下建立一个doxygen配置文件，用文本编辑器打开就可以编辑里面的配置选项。</p>\n<p>使用命令，</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">doxygen doxygen_filename</div></pre></td></tr></table></figure>\n<p>就可以生成注释文档了。</p>\n<p>下面就来说一说对中文的支持。</p>\n<h2 id=\"生成-HTML-格式文档\"><a href=\"#生成-HTML-格式文档\" class=\"headerlink\" title=\"生成 HTML 格式文档\"></a>生成 HTML 格式文档</h2><p>中文之所以乱码，很多时候是由于编码和译码格式不同，所以我们需要先知道自己代码文件的编码方式。我的代码都是建立在Visual Studio上的，可以通过VS的高级保存选项查看自己代码文件的存储编码格式。对于中文版的VS，一般应该是GB2312。</p>\n<p>我们打开 Doxygen 的配置文件，将里面的 INPUT_ENCODING 改为我们代码文件的编码格式，这里就改成 GB2312。</p>\n<p>这样一来，编译出来的 HTML 页面就不会有中文乱码了。</p>\n<h2 id=\"生成Latex-格式文档\"><a href=\"#生成Latex-格式文档\" class=\"headerlink\" title=\"生成Latex 格式文档\"></a>生成Latex 格式文档</h2><p>生成 Latex 需要本机上安装有 Latex 的编译环境。如果是中文用户，推荐的是CTEX套件，可以到他们的网站上去下载。</p>\n<p>可以看到，Doxygen为Latex文件的编译生成了make文件，我们在命令行窗口中执行make命令就可以完成编译，然而这时候会发现编译出错，pdf文档无法生成。</p>\n<p>打开生成的refman.latex文档，添加宏包 CJKutf8。然后找到 <code>\\begin{document}</code>一行，将其改为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">\\begin&#123;document&#125;</div><div class=\"line\">\\begin&#123;CJK&#125;&#123;UTF8&#125;&#123;gbsn&#125;</div></pre></td></tr></table></figure>\n<p>也就是说为正文提供了CJK环境，这样中文文本就可以正常编译了。</p>\n<p>相应的，我们要将结尾的 <code>\\end{document)</code>改为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">\\end&#123;CJK&#125; </div><div class=\"line\">\\end&#123;document&#125;</div></pre></td></tr></table></figure></p>\n<p>这样，运行make命令之后，就可以看到中文的注释文档了。</p>\n"},{"title":"Python Regular Expressions （Python 正则表达式)","date":"2014-07-17T11:00:00.000Z","_content":"\n本文来自于Google Developers中对于Python的介绍。[https://developers.google.com/edu/python/regular-expressions](https://developers.google.com/edu/python/regular-expressions \"Google Python Class, Regular Expression\")。\n\n\n\n## 认识正则表达式 ##\n\nPython的正则表达式是使用 **re 模块**的。\n\n``` py    \n    match = re.search(pattern,str)\n    if match:\n    \tprint 'found',match.group()\n    else:\n        print 'NOT Found!'\n```        \n        \n## 正则表达式的规则 ##\n\n### 基本规则 ###\n- a, x, 9 都是普通字符 (ordinary characters)\n- . (一个点)可以匹配任何单个字符（除了'\\n'）\n- \\w（小写的w）可以匹配一个单词里面的字母，数字或下划线 [a-zA-Z0-9_];\\W （大写的W）可以匹配非单词里的这些元素\n- \\b 匹配单词与非单词的分界\n- \\s（小写的s）匹配一个 whitespace character，包括 space，newline，return，tab，form(\\n\\r\\t\\f)；\\S（大写的S）匹配一个非 whitespace character\n- \\d 匹配十进制数字 [0-9]\n- ^=start，$=end 用来匹配字符串的开始和结束\n- \\ 是转义字符，用 \\. 来匹配串里的'.'，等\n### 一些基本的例子 ###\n\n``` py    \n    ## 在字符串'piiig'中查找'iii'\n    match = re.search(r'iii', 'piiig')  # found, match.group() == \"iii\"\n    match = re.search(r'igs', 'piiig')  #  not found, match == None\n\n    ## . 匹配除了\\n的任意字符\n    match = re.search(r'..g', 'piiig')  #  found, match.group() == \"iig\"\n\n    ## \\d 匹配0-9的数字字符, \\w 匹配单词里的字符\n    match = re.search(r'\\d\\d\\d', 'p123g') #  found, match.group() == \"123\"\n    match = re.search(r'\\w\\w\\w', '@@abcd!!') #  found, match.group() == \"abc\"   \n```    \n\n### 重复 ###\n可以用'+' '*' '?'来匹配0个，1个或多个重复字符。\n\n- '+' 用来匹配1个或者多个字符\n- '*' 用来匹配0个或者多个字符\n- '?' 用来匹配0个或1个字符\n\n注意，'+'和'*'会匹配尽可能多的字符。\n\n### 一些重复字符的例子 ###\n\n``` py\n    ## i+  匹配1个或者多个'i'\n    match = re.search(r'pi+', 'piiig') #  found, match.group() == \"piii\"\n\n    ## 找到字符串中最左边尽可能长的模式。\n    ## 注意，并没有匹配到第二个 'i+'\n    match = re.search(r'i+', 'piigiiii')  #  found, match.group() == \"ii\"\n\n    ## \\s*  匹配0个或1个空白字符 whitespace\n    match = re.search(r'\\d\\s*\\d\\s*\\d', 'xx1 2   3xx')  #  found, match.group() == \"1 2   3\"\n    match = re.search(r'\\d\\s*\\d\\s*\\d', 'xx12  3xx')    #  found, match.group() == \"12  3\"\n    match = re.search(r'\\d\\s*\\d\\s*\\d', 'xx123xx')      # found, match.group() == \"123\"\n\n    ## ^ 匹配字符串的第一个字符\n    match = re.search(r'^b\\w+', 'foobar')  # not found, match == None\n    ## 与上例对比\n    match = re.search(r'b\\w+', 'foobar')   # found, match.group() == \"bar\"\n```\n\n### Email ###\n考虑一个典型的Email地址：someone@host.com，可以用如下的方式匹配：\n\n``` py\n    match = re.search(r'\\w+@\\w+',str)\n```    \n\n但是，对于这种Email地址 'xyz alice-b@google.com purple monkey' 则不能奏效。\n\n### 使用方括号 ###\n方括号里面的字符表示一个字符集合。[abc]可以被用来匹配'a'或者'b'或者'c'。\\w \\s等都可以用在方括号里，除了'.'以外，它只能用来表示字面意义上的‘点’。所以上面的Email规则可以扩充如下：\n    \n``` py\n    match = re.search('r[\\w.-]+@[\\w.-]+',str)\n```\n\n你还可以使用'-'来指定范围，如[a-z]指示的是所有小写字母的集合。所以如果你想构造的字符集合中有'-'，请把它放到末尾[ab-]。另外，前方加上'^'，用来表示取集合的补集，例如[^ab]表示除了'a'和'b'之外的其他字符。\n\n## 操作 ##\n以Email地址为例，如果我们想要分别提取该地址的用户名'someone'和主机名'host.com'该怎么办呢？\n可以在模式中用圆括号指定。\n\n``` py\n    str = 'purple alice-b@google.com monkey dishwasher'\n    match = re.search('([\\w.-]+)@([\\w.-]+)', str)   #用圆括号指定分割\n    if match:\n        print match.group()   ## 'alice-b@google.com' (the whole match)\n        print match.group(1)  ## 'alice-b' (the username, group 1)\n      \tprint match.group(2)  ## 'google.com' (the host, group 2)\n```\n\n### findall 函数\n与group函数只找到最左端的一个匹配不同，findall函数找到字符串中所有与模式匹配的串。\n\n``` py\n    str = 'purple alice@google.com, blah monkey bob@abc.com blah dishwasher'\n    ## findall返回一个包含所有匹配结果的 list\n    emails = re.findall(r'[\\w\\.-]+@[\\w\\.-]+', str) ## ['alice@google.com', 'bob@abc.com']\n    for email in emails:\n        print email\n```\n\n### 在文件中使用findall\n当然可以读入文件的每一行，然后对每一行的内容调用findall，但是为什么不让这一切自动发生呢？\n\n``` py\n\tf = open(filename.txt,'r')\n\tmatches = re.findall(pattern,f.read())\n```\n\n### findall 和分组\n和group的用法相似，也可以指定分组。\n\n``` py\n    str = 'purple alice@google.com, blah monkey bob@abc.com blah dishwasher'\n    ##　返回了一个list\n    tuples = re.findall(r'([\\w\\.-]+)@([\\w\\.-]+)', str)\n    print tuples  ## [('alice', 'google.com'), ('bob', 'abc.com')]\n    ##　list中的元素是tuple \n    for tuple in tuples:\n      print tuple[0]  ## username\n      print tuple[1]  ## host\n```\n\n## 调试 ##\n\n正则表达式异常强大，使用简单的几条规则就可以演变出很多的模式组合。在确定你的模式之前，可能需要很多的调试工作。在一个小的测试集合上测试正则表达式。\n\n## 其他选项\n\n正则表达式还可以设置“选项”。\n\n``` py\n    match = re.search(pat,str,opt)\n```\n\n这些可选项如下：\n\n- IGNORECASE  忽视大小写\n- DOTALL  允许'.'匹配'\\n'\n- MULTILINE  在一个由许多行组成的字符串中，允许'^'和'$'匹配每一行的开始和结束\n","source":"_posts/2014-07-17-pythonregularexpression.md","raw":"---\ntitle: Python Regular Expressions （Python 正则表达式)\ndate: 2014-07-17 19:00:00\ntags: \n    -python\n---\n\n本文来自于Google Developers中对于Python的介绍。[https://developers.google.com/edu/python/regular-expressions](https://developers.google.com/edu/python/regular-expressions \"Google Python Class, Regular Expression\")。\n\n\n\n## 认识正则表达式 ##\n\nPython的正则表达式是使用 **re 模块**的。\n\n``` py    \n    match = re.search(pattern,str)\n    if match:\n    \tprint 'found',match.group()\n    else:\n        print 'NOT Found!'\n```        \n        \n## 正则表达式的规则 ##\n\n### 基本规则 ###\n- a, x, 9 都是普通字符 (ordinary characters)\n- . (一个点)可以匹配任何单个字符（除了'\\n'）\n- \\w（小写的w）可以匹配一个单词里面的字母，数字或下划线 [a-zA-Z0-9_];\\W （大写的W）可以匹配非单词里的这些元素\n- \\b 匹配单词与非单词的分界\n- \\s（小写的s）匹配一个 whitespace character，包括 space，newline，return，tab，form(\\n\\r\\t\\f)；\\S（大写的S）匹配一个非 whitespace character\n- \\d 匹配十进制数字 [0-9]\n- ^=start，$=end 用来匹配字符串的开始和结束\n- \\ 是转义字符，用 \\. 来匹配串里的'.'，等\n### 一些基本的例子 ###\n\n``` py    \n    ## 在字符串'piiig'中查找'iii'\n    match = re.search(r'iii', 'piiig')  # found, match.group() == \"iii\"\n    match = re.search(r'igs', 'piiig')  #  not found, match == None\n\n    ## . 匹配除了\\n的任意字符\n    match = re.search(r'..g', 'piiig')  #  found, match.group() == \"iig\"\n\n    ## \\d 匹配0-9的数字字符, \\w 匹配单词里的字符\n    match = re.search(r'\\d\\d\\d', 'p123g') #  found, match.group() == \"123\"\n    match = re.search(r'\\w\\w\\w', '@@abcd!!') #  found, match.group() == \"abc\"   \n```    \n\n### 重复 ###\n可以用'+' '*' '?'来匹配0个，1个或多个重复字符。\n\n- '+' 用来匹配1个或者多个字符\n- '*' 用来匹配0个或者多个字符\n- '?' 用来匹配0个或1个字符\n\n注意，'+'和'*'会匹配尽可能多的字符。\n\n### 一些重复字符的例子 ###\n\n``` py\n    ## i+  匹配1个或者多个'i'\n    match = re.search(r'pi+', 'piiig') #  found, match.group() == \"piii\"\n\n    ## 找到字符串中最左边尽可能长的模式。\n    ## 注意，并没有匹配到第二个 'i+'\n    match = re.search(r'i+', 'piigiiii')  #  found, match.group() == \"ii\"\n\n    ## \\s*  匹配0个或1个空白字符 whitespace\n    match = re.search(r'\\d\\s*\\d\\s*\\d', 'xx1 2   3xx')  #  found, match.group() == \"1 2   3\"\n    match = re.search(r'\\d\\s*\\d\\s*\\d', 'xx12  3xx')    #  found, match.group() == \"12  3\"\n    match = re.search(r'\\d\\s*\\d\\s*\\d', 'xx123xx')      # found, match.group() == \"123\"\n\n    ## ^ 匹配字符串的第一个字符\n    match = re.search(r'^b\\w+', 'foobar')  # not found, match == None\n    ## 与上例对比\n    match = re.search(r'b\\w+', 'foobar')   # found, match.group() == \"bar\"\n```\n\n### Email ###\n考虑一个典型的Email地址：someone@host.com，可以用如下的方式匹配：\n\n``` py\n    match = re.search(r'\\w+@\\w+',str)\n```    \n\n但是，对于这种Email地址 'xyz alice-b@google.com purple monkey' 则不能奏效。\n\n### 使用方括号 ###\n方括号里面的字符表示一个字符集合。[abc]可以被用来匹配'a'或者'b'或者'c'。\\w \\s等都可以用在方括号里，除了'.'以外，它只能用来表示字面意义上的‘点’。所以上面的Email规则可以扩充如下：\n    \n``` py\n    match = re.search('r[\\w.-]+@[\\w.-]+',str)\n```\n\n你还可以使用'-'来指定范围，如[a-z]指示的是所有小写字母的集合。所以如果你想构造的字符集合中有'-'，请把它放到末尾[ab-]。另外，前方加上'^'，用来表示取集合的补集，例如[^ab]表示除了'a'和'b'之外的其他字符。\n\n## 操作 ##\n以Email地址为例，如果我们想要分别提取该地址的用户名'someone'和主机名'host.com'该怎么办呢？\n可以在模式中用圆括号指定。\n\n``` py\n    str = 'purple alice-b@google.com monkey dishwasher'\n    match = re.search('([\\w.-]+)@([\\w.-]+)', str)   #用圆括号指定分割\n    if match:\n        print match.group()   ## 'alice-b@google.com' (the whole match)\n        print match.group(1)  ## 'alice-b' (the username, group 1)\n      \tprint match.group(2)  ## 'google.com' (the host, group 2)\n```\n\n### findall 函数\n与group函数只找到最左端的一个匹配不同，findall函数找到字符串中所有与模式匹配的串。\n\n``` py\n    str = 'purple alice@google.com, blah monkey bob@abc.com blah dishwasher'\n    ## findall返回一个包含所有匹配结果的 list\n    emails = re.findall(r'[\\w\\.-]+@[\\w\\.-]+', str) ## ['alice@google.com', 'bob@abc.com']\n    for email in emails:\n        print email\n```\n\n### 在文件中使用findall\n当然可以读入文件的每一行，然后对每一行的内容调用findall，但是为什么不让这一切自动发生呢？\n\n``` py\n\tf = open(filename.txt,'r')\n\tmatches = re.findall(pattern,f.read())\n```\n\n### findall 和分组\n和group的用法相似，也可以指定分组。\n\n``` py\n    str = 'purple alice@google.com, blah monkey bob@abc.com blah dishwasher'\n    ##　返回了一个list\n    tuples = re.findall(r'([\\w\\.-]+)@([\\w\\.-]+)', str)\n    print tuples  ## [('alice', 'google.com'), ('bob', 'abc.com')]\n    ##　list中的元素是tuple \n    for tuple in tuples:\n      print tuple[0]  ## username\n      print tuple[1]  ## host\n```\n\n## 调试 ##\n\n正则表达式异常强大，使用简单的几条规则就可以演变出很多的模式组合。在确定你的模式之前，可能需要很多的调试工作。在一个小的测试集合上测试正则表达式。\n\n## 其他选项\n\n正则表达式还可以设置“选项”。\n\n``` py\n    match = re.search(pat,str,opt)\n```\n\n这些可选项如下：\n\n- IGNORECASE  忽视大小写\n- DOTALL  允许'.'匹配'\\n'\n- MULTILINE  在一个由许多行组成的字符串中，允许'^'和'$'匹配每一行的开始和结束\n","slug":"2014-07-17-pythonregularexpression","published":1,"updated":"2017-01-22T14:30:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciy8rhk5e00005x1h0mw6kez5","content":"<p>本文来自于Google Developers中对于Python的介绍。<a href=\"https://developers.google.com/edu/python/regular-expressions\" title=\"Google Python Class, Regular Expression\" target=\"_blank\" rel=\"external\">https://developers.google.com/edu/python/regular-expressions</a>。</p>\n<h2 id=\"认识正则表达式\"><a href=\"#认识正则表达式\" class=\"headerlink\" title=\"认识正则表达式\"></a>认识正则表达式</h2><p>Python的正则表达式是使用 <strong>re 模块</strong>的。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div></pre></td><td class=\"code\"><pre><div class=\"line\">    match = re.search(pattern,str)</div><div class=\"line\">    <span class=\"keyword\">if</span> match:</div><div class=\"line\">    \t<span class=\"keyword\">print</span> <span class=\"string\">'found'</span>,match.group()</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">'NOT Found!'</span></div><div class=\"line\">```        </div><div class=\"line\">        </div><div class=\"line\"><span class=\"comment\">## 正则表达式的规则 ##</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">### 基本规则 ###</span></div><div class=\"line\">- a, x, <span class=\"number\">9</span> 都是普通字符 (ordinary characters)</div><div class=\"line\">- . (一个点)可以匹配任何单个字符（除了<span class=\"string\">'\\n'</span>）</div><div class=\"line\">- \\w（小写的w）可以匹配一个单词里面的字母，数字或下划线 [a-zA-Z0<span class=\"number\">-9</span>_];\\W （大写的W）可以匹配非单词里的这些元素</div><div class=\"line\">- \\b 匹配单词与非单词的分界</div><div class=\"line\">- \\s（小写的s）匹配一个 whitespace character，包括 space，newline，<span class=\"keyword\">return</span>，tab，form(\\n\\r\\t\\f)；\\S（大写的S）匹配一个非 whitespace character</div><div class=\"line\">- \\d 匹配十进制数字 [<span class=\"number\">0</span><span class=\"number\">-9</span>]</div><div class=\"line\">- ^=start，$=end 用来匹配字符串的开始和结束</div><div class=\"line\">- \\ 是转义字符，用 \\. 来匹配串里的<span class=\"string\">'.'</span>，等</div><div class=\"line\"><span class=\"comment\">### 一些基本的例子 ###</span></div><div class=\"line\"></div><div class=\"line\">``` py    </div><div class=\"line\">    <span class=\"comment\">## 在字符串'piiig'中查找'iii'</span></div><div class=\"line\">    match = re.search(<span class=\"string\">r'iii'</span>, <span class=\"string\">'piiig'</span>)  <span class=\"comment\"># found, match.group() == \"iii\"</span></div><div class=\"line\">    match = re.search(<span class=\"string\">r'igs'</span>, <span class=\"string\">'piiig'</span>)  <span class=\"comment\">#  not found, match == None</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">## . 匹配除了\\n的任意字符</span></div><div class=\"line\">    match = re.search(<span class=\"string\">r'..g'</span>, <span class=\"string\">'piiig'</span>)  <span class=\"comment\">#  found, match.group() == \"iig\"</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">## \\d 匹配0-9的数字字符, \\w 匹配单词里的字符</span></div><div class=\"line\">    match = re.search(<span class=\"string\">r'\\d\\d\\d'</span>, <span class=\"string\">'p123g'</span>) <span class=\"comment\">#  found, match.group() == \"123\"</span></div><div class=\"line\">    match = re.search(<span class=\"string\">r'\\w\\w\\w'</span>, <span class=\"string\">'@@abcd!!'</span>) <span class=\"comment\">#  found, match.group() == \"abc\"   </span></div><div class=\"line\">```    </div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">### 重复 ###</span></div><div class=\"line\">可以用<span class=\"string\">'+'</span> <span class=\"string\">'*'</span> <span class=\"string\">'?'</span>来匹配<span class=\"number\">0</span>个，<span class=\"number\">1</span>个或多个重复字符。</div><div class=\"line\"></div><div class=\"line\">- <span class=\"string\">'+'</span> 用来匹配<span class=\"number\">1</span>个或者多个字符</div><div class=\"line\">- <span class=\"string\">'*'</span> 用来匹配<span class=\"number\">0</span>个或者多个字符</div><div class=\"line\">- <span class=\"string\">'?'</span> 用来匹配<span class=\"number\">0</span>个或<span class=\"number\">1</span>个字符</div><div class=\"line\"></div><div class=\"line\">注意，<span class=\"string\">'+'</span>和<span class=\"string\">'*'</span>会匹配尽可能多的字符。</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">### 一些重复字符的例子 ###</span></div><div class=\"line\"></div><div class=\"line\">``` py</div><div class=\"line\">    <span class=\"comment\">## i+  匹配1个或者多个'i'</span></div><div class=\"line\">    match = re.search(<span class=\"string\">r'pi+'</span>, <span class=\"string\">'piiig'</span>) <span class=\"comment\">#  found, match.group() == \"piii\"</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">## 找到字符串中最左边尽可能长的模式。</span></div><div class=\"line\">    <span class=\"comment\">## 注意，并没有匹配到第二个 'i+'</span></div><div class=\"line\">    match = re.search(<span class=\"string\">r'i+'</span>, <span class=\"string\">'piigiiii'</span>)  <span class=\"comment\">#  found, match.group() == \"ii\"</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">## \\s*  匹配0个或1个空白字符 whitespace</span></div><div class=\"line\">    match = re.search(<span class=\"string\">r'\\d\\s*\\d\\s*\\d'</span>, <span class=\"string\">'xx1 2   3xx'</span>)  <span class=\"comment\">#  found, match.group() == \"1 2   3\"</span></div><div class=\"line\">    match = re.search(<span class=\"string\">r'\\d\\s*\\d\\s*\\d'</span>, <span class=\"string\">'xx12  3xx'</span>)    <span class=\"comment\">#  found, match.group() == \"12  3\"</span></div><div class=\"line\">    match = re.search(<span class=\"string\">r'\\d\\s*\\d\\s*\\d'</span>, <span class=\"string\">'xx123xx'</span>)      <span class=\"comment\"># found, match.group() == \"123\"</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">## ^ 匹配字符串的第一个字符</span></div><div class=\"line\">    match = re.search(<span class=\"string\">r'^b\\w+'</span>, <span class=\"string\">'foobar'</span>)  <span class=\"comment\"># not found, match == None</span></div><div class=\"line\">    <span class=\"comment\">## 与上例对比</span></div><div class=\"line\">    match = re.search(<span class=\"string\">r'b\\w+'</span>, <span class=\"string\">'foobar'</span>)   <span class=\"comment\"># found, match.group() == \"bar\"</span></div></pre></td></tr></table></figure>\n<h3 id=\"Email\"><a href=\"#Email\" class=\"headerlink\" title=\"Email\"></a>Email</h3><p>考虑一个典型的Email地址：someone@host.com，可以用如下的方式匹配：</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">    match = re.search(<span class=\"string\">r'\\w+@\\w+'</span>,str)</div><div class=\"line\">```    </div><div class=\"line\"></div><div class=\"line\">但是，对于这种Email地址 <span class=\"string\">'xyz alice-b@google.com purple monkey'</span> 则不能奏效。</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">### 使用方括号 ###</span></div><div class=\"line\">方括号里面的字符表示一个字符集合。[abc]可以被用来匹配<span class=\"string\">'a'</span>或者<span class=\"string\">'b'</span>或者<span class=\"string\">'c'</span>。\\w \\s等都可以用在方括号里，除了<span class=\"string\">'.'</span>以外，它只能用来表示字面意义上的‘点’。所以上面的Email规则可以扩充如下：</div><div class=\"line\">    </div><div class=\"line\">``` py</div><div class=\"line\">    match = re.search(<span class=\"string\">'r[\\w.-]+@[\\w.-]+'</span>,str)</div></pre></td></tr></table></figure>\n<p>你还可以使用’-‘来指定范围，如[a-z]指示的是所有小写字母的集合。所以如果你想构造的字符集合中有’-‘，请把它放到末尾[ab-]。另外，前方加上’^’，用来表示取集合的补集，例如[^ab]表示除了’a’和’b’之外的其他字符。</p>\n<h2 id=\"操作\"><a href=\"#操作\" class=\"headerlink\" title=\"操作\"></a>操作</h2><p>以Email地址为例，如果我们想要分别提取该地址的用户名’someone’和主机名’host.com’该怎么办呢？<br>可以在模式中用圆括号指定。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">str = <span class=\"string\">'purple alice-b@google.com monkey dishwasher'</span></div><div class=\"line\">match = re.search(<span class=\"string\">'([\\w.-]+)@([\\w.-]+)'</span>, str)   <span class=\"comment\">#用圆括号指定分割</span></div><div class=\"line\"><span class=\"keyword\">if</span> match:</div><div class=\"line\">    <span class=\"keyword\">print</span> match.group()   <span class=\"comment\">## 'alice-b@google.com' (the whole match)</span></div><div class=\"line\">    <span class=\"keyword\">print</span> match.group(<span class=\"number\">1</span>)  <span class=\"comment\">## 'alice-b' (the username, group 1)</span></div><div class=\"line\">  \t<span class=\"keyword\">print</span> match.group(<span class=\"number\">2</span>)  <span class=\"comment\">## 'google.com' (the host, group 2)</span></div></pre></td></tr></table></figure>\n<h3 id=\"findall-函数\"><a href=\"#findall-函数\" class=\"headerlink\" title=\"findall 函数\"></a>findall 函数</h3><p>与group函数只找到最左端的一个匹配不同，findall函数找到字符串中所有与模式匹配的串。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">str = <span class=\"string\">'purple alice@google.com, blah monkey bob@abc.com blah dishwasher'</span></div><div class=\"line\"><span class=\"comment\">## findall返回一个包含所有匹配结果的 list</span></div><div class=\"line\">emails = re.findall(<span class=\"string\">r'[\\w\\.-]+@[\\w\\.-]+'</span>, str) <span class=\"comment\">## ['alice@google.com', 'bob@abc.com']</span></div><div class=\"line\"><span class=\"keyword\">for</span> email <span class=\"keyword\">in</span> emails:</div><div class=\"line\">    <span class=\"keyword\">print</span> email</div></pre></td></tr></table></figure>\n<h3 id=\"在文件中使用findall\"><a href=\"#在文件中使用findall\" class=\"headerlink\" title=\"在文件中使用findall\"></a>在文件中使用findall</h3><p>当然可以读入文件的每一行，然后对每一行的内容调用findall，但是为什么不让这一切自动发生呢？</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">f = open(filename.txt,<span class=\"string\">'r'</span>)</div><div class=\"line\">matches = re.findall(pattern,f.read())</div></pre></td></tr></table></figure>\n<h3 id=\"findall-和分组\"><a href=\"#findall-和分组\" class=\"headerlink\" title=\"findall 和分组\"></a>findall 和分组</h3><p>和group的用法相似，也可以指定分组。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">str = <span class=\"string\">'purple alice@google.com, blah monkey bob@abc.com blah dishwasher'</span></div><div class=\"line\"><span class=\"comment\">##　返回了一个list</span></div><div class=\"line\">tuples = re.findall(<span class=\"string\">r'([\\w\\.-]+)@([\\w\\.-]+)'</span>, str)</div><div class=\"line\"><span class=\"keyword\">print</span> tuples  <span class=\"comment\">## [('alice', 'google.com'), ('bob', 'abc.com')]</span></div><div class=\"line\"><span class=\"comment\">##　list中的元素是tuple </span></div><div class=\"line\"><span class=\"keyword\">for</span> tuple <span class=\"keyword\">in</span> tuples:</div><div class=\"line\">  <span class=\"keyword\">print</span> tuple[<span class=\"number\">0</span>]  <span class=\"comment\">## username</span></div><div class=\"line\">  <span class=\"keyword\">print</span> tuple[<span class=\"number\">1</span>]  <span class=\"comment\">## host</span></div></pre></td></tr></table></figure>\n<h2 id=\"调试\"><a href=\"#调试\" class=\"headerlink\" title=\"调试\"></a>调试</h2><p>正则表达式异常强大，使用简单的几条规则就可以演变出很多的模式组合。在确定你的模式之前，可能需要很多的调试工作。在一个小的测试集合上测试正则表达式。</p>\n<h2 id=\"其他选项\"><a href=\"#其他选项\" class=\"headerlink\" title=\"其他选项\"></a>其他选项</h2><p>正则表达式还可以设置“选项”。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">match = re.search(pat,str,opt)</div></pre></td></tr></table></figure>\n<p>这些可选项如下：</p>\n<ul>\n<li>IGNORECASE  忽视大小写</li>\n<li>DOTALL  允许’.’匹配’\\n’</li>\n<li>MULTILINE  在一个由许多行组成的字符串中，允许’^’和’$’匹配每一行的开始和结束</li>\n</ul>\n","excerpt":"","more":"<p>本文来自于Google Developers中对于Python的介绍。<a href=\"https://developers.google.com/edu/python/regular-expressions\" title=\"Google Python Class, Regular Expression\">https://developers.google.com/edu/python/regular-expressions</a>。</p>\n<h2 id=\"认识正则表达式\"><a href=\"#认识正则表达式\" class=\"headerlink\" title=\"认识正则表达式\"></a>认识正则表达式</h2><p>Python的正则表达式是使用 <strong>re 模块</strong>的。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div></pre></td><td class=\"code\"><pre><div class=\"line\">    match = re.search(pattern,str)</div><div class=\"line\">    <span class=\"keyword\">if</span> match:</div><div class=\"line\">    \t<span class=\"keyword\">print</span> <span class=\"string\">'found'</span>,match.group()</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">'NOT Found!'</span></div><div class=\"line\">```        </div><div class=\"line\">        </div><div class=\"line\"><span class=\"comment\">## 正则表达式的规则 ##</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">### 基本规则 ###</span></div><div class=\"line\">- a, x, <span class=\"number\">9</span> 都是普通字符 (ordinary characters)</div><div class=\"line\">- . (一个点)可以匹配任何单个字符（除了<span class=\"string\">'\\n'</span>）</div><div class=\"line\">- \\w（小写的w）可以匹配一个单词里面的字母，数字或下划线 [a-zA-Z0<span class=\"number\">-9</span>_];\\W （大写的W）可以匹配非单词里的这些元素</div><div class=\"line\">- \\b 匹配单词与非单词的分界</div><div class=\"line\">- \\s（小写的s）匹配一个 whitespace character，包括 space，newline，<span class=\"keyword\">return</span>，tab，form(\\n\\r\\t\\f)；\\S（大写的S）匹配一个非 whitespace character</div><div class=\"line\">- \\d 匹配十进制数字 [<span class=\"number\">0</span><span class=\"number\">-9</span>]</div><div class=\"line\">- ^=start，$=end 用来匹配字符串的开始和结束</div><div class=\"line\">- \\ 是转义字符，用 \\. 来匹配串里的<span class=\"string\">'.'</span>，等</div><div class=\"line\"><span class=\"comment\">### 一些基本的例子 ###</span></div><div class=\"line\"></div><div class=\"line\">``` py    </div><div class=\"line\">    <span class=\"comment\">## 在字符串'piiig'中查找'iii'</span></div><div class=\"line\">    match = re.search(<span class=\"string\">r'iii'</span>, <span class=\"string\">'piiig'</span>)  <span class=\"comment\"># found, match.group() == \"iii\"</span></div><div class=\"line\">    match = re.search(<span class=\"string\">r'igs'</span>, <span class=\"string\">'piiig'</span>)  <span class=\"comment\">#  not found, match == None</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">## . 匹配除了\\n的任意字符</span></div><div class=\"line\">    match = re.search(<span class=\"string\">r'..g'</span>, <span class=\"string\">'piiig'</span>)  <span class=\"comment\">#  found, match.group() == \"iig\"</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">## \\d 匹配0-9的数字字符, \\w 匹配单词里的字符</span></div><div class=\"line\">    match = re.search(<span class=\"string\">r'\\d\\d\\d'</span>, <span class=\"string\">'p123g'</span>) <span class=\"comment\">#  found, match.group() == \"123\"</span></div><div class=\"line\">    match = re.search(<span class=\"string\">r'\\w\\w\\w'</span>, <span class=\"string\">'@@abcd!!'</span>) <span class=\"comment\">#  found, match.group() == \"abc\"   </span></div><div class=\"line\">```    </div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">### 重复 ###</span></div><div class=\"line\">可以用<span class=\"string\">'+'</span> <span class=\"string\">'*'</span> <span class=\"string\">'?'</span>来匹配<span class=\"number\">0</span>个，<span class=\"number\">1</span>个或多个重复字符。</div><div class=\"line\"></div><div class=\"line\">- <span class=\"string\">'+'</span> 用来匹配<span class=\"number\">1</span>个或者多个字符</div><div class=\"line\">- <span class=\"string\">'*'</span> 用来匹配<span class=\"number\">0</span>个或者多个字符</div><div class=\"line\">- <span class=\"string\">'?'</span> 用来匹配<span class=\"number\">0</span>个或<span class=\"number\">1</span>个字符</div><div class=\"line\"></div><div class=\"line\">注意，<span class=\"string\">'+'</span>和<span class=\"string\">'*'</span>会匹配尽可能多的字符。</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">### 一些重复字符的例子 ###</span></div><div class=\"line\"></div><div class=\"line\">``` py</div><div class=\"line\">    <span class=\"comment\">## i+  匹配1个或者多个'i'</span></div><div class=\"line\">    match = re.search(<span class=\"string\">r'pi+'</span>, <span class=\"string\">'piiig'</span>) <span class=\"comment\">#  found, match.group() == \"piii\"</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">## 找到字符串中最左边尽可能长的模式。</span></div><div class=\"line\">    <span class=\"comment\">## 注意，并没有匹配到第二个 'i+'</span></div><div class=\"line\">    match = re.search(<span class=\"string\">r'i+'</span>, <span class=\"string\">'piigiiii'</span>)  <span class=\"comment\">#  found, match.group() == \"ii\"</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">## \\s*  匹配0个或1个空白字符 whitespace</span></div><div class=\"line\">    match = re.search(<span class=\"string\">r'\\d\\s*\\d\\s*\\d'</span>, <span class=\"string\">'xx1 2   3xx'</span>)  <span class=\"comment\">#  found, match.group() == \"1 2   3\"</span></div><div class=\"line\">    match = re.search(<span class=\"string\">r'\\d\\s*\\d\\s*\\d'</span>, <span class=\"string\">'xx12  3xx'</span>)    <span class=\"comment\">#  found, match.group() == \"12  3\"</span></div><div class=\"line\">    match = re.search(<span class=\"string\">r'\\d\\s*\\d\\s*\\d'</span>, <span class=\"string\">'xx123xx'</span>)      <span class=\"comment\"># found, match.group() == \"123\"</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">## ^ 匹配字符串的第一个字符</span></div><div class=\"line\">    match = re.search(<span class=\"string\">r'^b\\w+'</span>, <span class=\"string\">'foobar'</span>)  <span class=\"comment\"># not found, match == None</span></div><div class=\"line\">    <span class=\"comment\">## 与上例对比</span></div><div class=\"line\">    match = re.search(<span class=\"string\">r'b\\w+'</span>, <span class=\"string\">'foobar'</span>)   <span class=\"comment\"># found, match.group() == \"bar\"</span></div></pre></td></tr></table></figure>\n<h3 id=\"Email\"><a href=\"#Email\" class=\"headerlink\" title=\"Email\"></a>Email</h3><p>考虑一个典型的Email地址：someone@host.com，可以用如下的方式匹配：</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">    match = re.search(<span class=\"string\">r'\\w+@\\w+'</span>,str)</div><div class=\"line\">```    </div><div class=\"line\"></div><div class=\"line\">但是，对于这种Email地址 <span class=\"string\">'xyz alice-b@google.com purple monkey'</span> 则不能奏效。</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">### 使用方括号 ###</span></div><div class=\"line\">方括号里面的字符表示一个字符集合。[abc]可以被用来匹配<span class=\"string\">'a'</span>或者<span class=\"string\">'b'</span>或者<span class=\"string\">'c'</span>。\\w \\s等都可以用在方括号里，除了<span class=\"string\">'.'</span>以外，它只能用来表示字面意义上的‘点’。所以上面的Email规则可以扩充如下：</div><div class=\"line\">    </div><div class=\"line\">``` py</div><div class=\"line\">    match = re.search(<span class=\"string\">'r[\\w.-]+@[\\w.-]+'</span>,str)</div></pre></td></tr></table></figure>\n<p>你还可以使用’-‘来指定范围，如[a-z]指示的是所有小写字母的集合。所以如果你想构造的字符集合中有’-‘，请把它放到末尾[ab-]。另外，前方加上’^’，用来表示取集合的补集，例如[^ab]表示除了’a’和’b’之外的其他字符。</p>\n<h2 id=\"操作\"><a href=\"#操作\" class=\"headerlink\" title=\"操作\"></a>操作</h2><p>以Email地址为例，如果我们想要分别提取该地址的用户名’someone’和主机名’host.com’该怎么办呢？<br>可以在模式中用圆括号指定。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">str = <span class=\"string\">'purple alice-b@google.com monkey dishwasher'</span></div><div class=\"line\">match = re.search(<span class=\"string\">'([\\w.-]+)@([\\w.-]+)'</span>, str)   <span class=\"comment\">#用圆括号指定分割</span></div><div class=\"line\"><span class=\"keyword\">if</span> match:</div><div class=\"line\">    <span class=\"keyword\">print</span> match.group()   <span class=\"comment\">## 'alice-b@google.com' (the whole match)</span></div><div class=\"line\">    <span class=\"keyword\">print</span> match.group(<span class=\"number\">1</span>)  <span class=\"comment\">## 'alice-b' (the username, group 1)</span></div><div class=\"line\">  \t<span class=\"keyword\">print</span> match.group(<span class=\"number\">2</span>)  <span class=\"comment\">## 'google.com' (the host, group 2)</span></div></pre></td></tr></table></figure>\n<h3 id=\"findall-函数\"><a href=\"#findall-函数\" class=\"headerlink\" title=\"findall 函数\"></a>findall 函数</h3><p>与group函数只找到最左端的一个匹配不同，findall函数找到字符串中所有与模式匹配的串。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">str = <span class=\"string\">'purple alice@google.com, blah monkey bob@abc.com blah dishwasher'</span></div><div class=\"line\"><span class=\"comment\">## findall返回一个包含所有匹配结果的 list</span></div><div class=\"line\">emails = re.findall(<span class=\"string\">r'[\\w\\.-]+@[\\w\\.-]+'</span>, str) <span class=\"comment\">## ['alice@google.com', 'bob@abc.com']</span></div><div class=\"line\"><span class=\"keyword\">for</span> email <span class=\"keyword\">in</span> emails:</div><div class=\"line\">    <span class=\"keyword\">print</span> email</div></pre></td></tr></table></figure>\n<h3 id=\"在文件中使用findall\"><a href=\"#在文件中使用findall\" class=\"headerlink\" title=\"在文件中使用findall\"></a>在文件中使用findall</h3><p>当然可以读入文件的每一行，然后对每一行的内容调用findall，但是为什么不让这一切自动发生呢？</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">f = open(filename.txt,<span class=\"string\">'r'</span>)</div><div class=\"line\">matches = re.findall(pattern,f.read())</div></pre></td></tr></table></figure>\n<h3 id=\"findall-和分组\"><a href=\"#findall-和分组\" class=\"headerlink\" title=\"findall 和分组\"></a>findall 和分组</h3><p>和group的用法相似，也可以指定分组。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">str = <span class=\"string\">'purple alice@google.com, blah monkey bob@abc.com blah dishwasher'</span></div><div class=\"line\"><span class=\"comment\">##　返回了一个list</span></div><div class=\"line\">tuples = re.findall(<span class=\"string\">r'([\\w\\.-]+)@([\\w\\.-]+)'</span>, str)</div><div class=\"line\"><span class=\"keyword\">print</span> tuples  <span class=\"comment\">## [('alice', 'google.com'), ('bob', 'abc.com')]</span></div><div class=\"line\"><span class=\"comment\">##　list中的元素是tuple </span></div><div class=\"line\"><span class=\"keyword\">for</span> tuple <span class=\"keyword\">in</span> tuples:</div><div class=\"line\">  <span class=\"keyword\">print</span> tuple[<span class=\"number\">0</span>]  <span class=\"comment\">## username</span></div><div class=\"line\">  <span class=\"keyword\">print</span> tuple[<span class=\"number\">1</span>]  <span class=\"comment\">## host</span></div></pre></td></tr></table></figure>\n<h2 id=\"调试\"><a href=\"#调试\" class=\"headerlink\" title=\"调试\"></a>调试</h2><p>正则表达式异常强大，使用简单的几条规则就可以演变出很多的模式组合。在确定你的模式之前，可能需要很多的调试工作。在一个小的测试集合上测试正则表达式。</p>\n<h2 id=\"其他选项\"><a href=\"#其他选项\" class=\"headerlink\" title=\"其他选项\"></a>其他选项</h2><p>正则表达式还可以设置“选项”。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">match = re.search(pat,str,opt)</div></pre></td></tr></table></figure>\n<p>这些可选项如下：</p>\n<ul>\n<li>IGNORECASE  忽视大小写</li>\n<li>DOTALL  允许’.’匹配’\\n’</li>\n<li>MULTILINE  在一个由许多行组成的字符串中，允许’^’和’$’匹配每一行的开始和结束</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ciy8pr52u0002nk1hbkk51k62","tag_id":"ciy8pr5340005nk1hxz8q9xbh","_id":"ciy8pr53h0009nk1hiv90bivs"},{"post_id":"ciy8pr52u0002nk1hbkk51k62","tag_id":"ciy8pr53f0007nk1hr7qnn7uc","_id":"ciy8pr53h000ank1huiurzoap"},{"post_id":"ciy8pr5370006nk1hmadbbi1v","tag_id":"ciy8pr53h0008nk1hwcoo4tfz","_id":"ciy8pr53i000cnk1h4umvfx07"},{"post_id":"ciy8pr5370006nk1hmadbbi1v","tag_id":"ciy8pr53h000bnk1h1n3msowg","_id":"ciy8pr53i000dnk1hsyqtn64m"},{"post_id":"ciy8pr52o0000nk1hlsd99g2u","tag_id":"ciy8pxum90001ya1h45cvk97m","_id":"ciy8pxumd0003ya1hcp5tpmiy"},{"post_id":"ciy8pr52o0000nk1hlsd99g2u","tag_id":"ciy8pr53h0008nk1hwcoo4tfz","_id":"ciy8pyfwt0004ya1hpkrsu9sp"},{"post_id":"ciy8rhk5e00005x1h0mw6kez5","tag_id":"ciy8rhk5m00015x1hacfcia0z","_id":"ciy8rhk5p00025x1h804yq41l"}],"Tag":[{"name":"CS131","_id":"ciy8pr5340005nk1hxz8q9xbh"},{"name":"公开课","_id":"ciy8pr53f0007nk1hr7qnn7uc"},{"name":"tool","_id":"ciy8pr53h0008nk1hwcoo4tfz"},{"name":"doxygen","_id":"ciy8pr53h000bnk1h1n3msowg"},{"name":"tools","_id":"ciy8pxum60000ya1hg5waje3l"},{"name":"gsl","_id":"ciy8pxum90001ya1h45cvk97m"},{"name":"-python","_id":"ciy8rhk5m00015x1hacfcia0z"}]}}